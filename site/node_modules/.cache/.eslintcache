[{"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\index.tsx":"1","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\reportWebVitals.ts":"2","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\App.tsx":"3","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\routes\\index.tsx":"4","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\index.ts":"5","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\funcionario\\cadastro-doacao\\CadastroDoacao.tsx":"6","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\inicio\\PaginaInicial.tsx":"7","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\cadastro\\Cadastro.tsx":"8","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\cadastro\\CadastroDados.tsx":"9","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\cadastro\\CadastroEmpresa.tsx":"10","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\inicio\\saiba-mais\\SaibaMais.tsx":"11","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\login\\Login.tsx":"12","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\usuario\\mapa\\Mapa.tsx":"13","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\funcionario\\cadastro-funcionario\\CadastroFuncionario.tsx":"14","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\funcionario\\requisicao\\Requisicao.tsx":"15","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\funcionario\\agenda\\AgendaHistorico.tsx":"16","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\usuario\\mapa\\HospitalDetalhes.tsx":"17","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\usuario\\quiz\\Quiz.tsx":"18","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\usuario\\agenda\\Agendamento.tsx":"19","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\usuario\\historico\\Historico.tsx":"20","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\usuario\\ranking\\Ranking.tsx":"21","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\usuario\\perfil\\Perfil.tsx":"22","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\inicio\\components\\Funciona.tsx":"23","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\inicio\\components\\Doar.tsx":"24","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\components\\imagens.tsx":"25","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\inicio\\components\\Header.tsx":"26","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\inicio\\components\\Slogan.tsx":"27","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\sevice\\api\\tarefas\\TarefasService.ts":"28","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\usuario\\agenda\\components\\Horario.tsx":"29","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\usuario\\historico\\components\\ProximaDoacao.tsx":"30","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\usuario\\historico\\components\\HistoricoDoacao.tsx":"31","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\components\\index.tsx":"32","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\usuario\\agenda\\components\\Agenda.tsx":"33","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\usuario\\agenda\\components\\Hemocentro.tsx":"34","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\inicio\\components\\index.tsx":"35","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\contexts\\index.tsx":"36","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\sevice\\api\\ApiConfig.ts":"37","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\sevice\\api\\ApiException.ts":"38","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\inicio\\components\\Somos.tsx":"39","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\inicio\\components\\Perguntas.tsx":"40","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\inicio\\components\\FacaParte.tsx":"41","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\components\\menu\\MenuPerfilFuncionario.tsx":"42","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\components\\menu\\MenuPerfilUsuario.tsx":"43","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\components\\input-pesquisa\\InputPesquisa.tsx":"44","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\components\\input\\Input.tsx":"45","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\components\\onda-lateral\\OndaLateral.tsx":"46","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\contexts\\Anexo.ts":"47","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\contexts\\UsuarioLogado.tsx":"48","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\cadastro\\CadastroEmpresaDados.tsx":"49","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\sevice\\api\\tarefas\\quizService.ts":"50","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\sevice\\api\\tarefas\\cadastros\\CadastroEmpresaService.ts":"51","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\sevice\\api\\tarefas\\cadastros\\CadastroEmpresaEnderecoService.ts":"52","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\sevice\\api\\tarefas\\cadastros\\CadastroFuncionarioService.ts":"53","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\sevice\\api\\tarefas\\cadastros\\CadastroDoacaoService.ts":"54","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\js\\maps.js":"55"},{"size":678,"mtime":1700854042805,"results":"56","hashOfConfig":"57"},{"size":440,"mtime":1700854042806,"results":"58","hashOfConfig":"57"},{"size":105,"mtime":1700854042490,"results":"59","hashOfConfig":"57"},{"size":2244,"mtime":1700854152364,"results":"60","hashOfConfig":"57"},{"size":855,"mtime":1700854152363,"results":"61","hashOfConfig":"57"},{"size":9450,"mtime":1700855708309,"results":"62","hashOfConfig":"57"},{"size":2957,"mtime":1700854042493,"results":"63","hashOfConfig":"57"},{"size":6106,"mtime":1701065149331,"results":"64","hashOfConfig":"57"},{"size":10611,"mtime":1701064823334,"results":"65","hashOfConfig":"57"},{"size":6265,"mtime":1700854152362,"results":"66","hashOfConfig":"57"},{"size":5743,"mtime":1700854042496,"results":"67","hashOfConfig":"57"},{"size":6389,"mtime":1700854152364,"results":"68","hashOfConfig":"57"},{"size":2190,"mtime":1700854042498,"results":"69","hashOfConfig":"57"},{"size":7468,"mtime":1700854152363,"results":"70","hashOfConfig":"57"},{"size":3714,"mtime":1700854042493,"results":"71","hashOfConfig":"57"},{"size":3028,"mtime":1700854042492,"results":"72","hashOfConfig":"57"},{"size":3501,"mtime":1700854042498,"results":"73","hashOfConfig":"57"},{"size":10393,"mtime":1700854152364,"results":"74","hashOfConfig":"57"},{"size":5305,"mtime":1700854042496,"results":"75","hashOfConfig":"57"},{"size":675,"mtime":1700854042497,"results":"76","hashOfConfig":"57"},{"size":189,"mtime":1700854042499,"results":"77","hashOfConfig":"57"},{"size":3568,"mtime":1700854042499,"results":"78","hashOfConfig":"57"},{"size":2647,"mtime":1700854042494,"results":"79","hashOfConfig":"57"},{"size":2111,"mtime":1700854042494,"results":"80","hashOfConfig":"57"},{"size":2524,"mtime":1700854152365,"results":"81","hashOfConfig":"57"},{"size":1505,"mtime":1700854042494,"results":"82","hashOfConfig":"57"},{"size":1372,"mtime":1700854042495,"results":"83","hashOfConfig":"57"},{"size":6988,"mtime":1701063755480,"results":"84","hashOfConfig":"57"},{"size":5780,"mtime":1700854042497,"results":"85","hashOfConfig":"57"},{"size":6597,"mtime":1700854042498,"results":"86","hashOfConfig":"57"},{"size":3588,"mtime":1700854042497,"results":"87","hashOfConfig":"57"},{"size":214,"mtime":1700854042500,"results":"88","hashOfConfig":"57"},{"size":1746,"mtime":1700854042497,"results":"89","hashOfConfig":"57"},{"size":3991,"mtime":1700854042497,"results":"90","hashOfConfig":"57"},{"size":192,"mtime":1700854042495,"results":"91","hashOfConfig":"57"},{"size":58,"mtime":1700854042502,"results":"92","hashOfConfig":"57"},{"size":137,"mtime":1700854042502,"results":"93","hashOfConfig":"57"},{"size":182,"mtime":1700854042503,"results":"94","hashOfConfig":"57"},{"size":1946,"mtime":1700854042495,"results":"95","hashOfConfig":"57"},{"size":3863,"mtime":1700854042494,"results":"96","hashOfConfig":"57"},{"size":1213,"mtime":1700854042494,"results":"97","hashOfConfig":"57"},{"size":984,"mtime":1700854042500,"results":"98","hashOfConfig":"57"},{"size":1120,"mtime":1700854042501,"results":"99","hashOfConfig":"57"},{"size":598,"mtime":1700854042500,"results":"100","hashOfConfig":"57"},{"size":1017,"mtime":1701034886495,"results":"101","hashOfConfig":"57"},{"size":409,"mtime":1700854042501,"results":"102","hashOfConfig":"57"},{"size":1198,"mtime":1700854042501,"results":"103","hashOfConfig":"57"},{"size":699,"mtime":1700854042501,"results":"104","hashOfConfig":"57"},{"size":6106,"mtime":1700854152362,"results":"105","hashOfConfig":"57"},{"size":750,"mtime":1700854152367,"results":"106","hashOfConfig":"57"},{"size":851,"mtime":1700854152367,"results":"107","hashOfConfig":"57"},{"size":919,"mtime":1700854152366,"results":"108","hashOfConfig":"57"},{"size":663,"mtime":1700854152367,"results":"109","hashOfConfig":"57"},{"size":1576,"mtime":1700854152366,"results":"110","hashOfConfig":"57"},{"size":3583,"mtime":1700854042805,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"116"},"u3c8xc",{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"116"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"116"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"116"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"116"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"116"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"116"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"116"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"116"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"116"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"116"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"116"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"116"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"116"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"116"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"116"},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"295"},"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\index.tsx",["296"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { App } from './app/App';\r\nimport { GoogleMap } from '@react-google-maps/api';\r\n//import { GoogleMapProvider } from '@react-google-maps/api';\r\n\r\n\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["297"],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\reportWebVitals.ts",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\App.tsx",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\routes\\index.tsx",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\index.ts",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\funcionario\\cadastro-doacao\\CadastroDoacao.tsx",["298","299","300","301","302","303","304","305","306"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport \"../../../../html-css-template/css/CadastroDoacao.css\";\r\nimport {\r\n  Input,\r\n  MenuPerfilFuncionario,\r\n  OndaLateralEsquerda,\r\n} from \"../../../shared/components\";\r\nimport { vetorIcon } from \"../../../shared/components/imagens\";\r\nimport { vetorImg } from \"../../../shared/components/imagens\";\r\n\r\nimport { useState, useRef, useEffect, useCallback } from \"react\";\r\n\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  CadastroDoacaoService,\r\n  ICadastroDoacao,\r\n  ICadastroDoacaoCreate,\r\n} from \"../../../shared/sevice/api/tarefas/cadastros/CadastroDoacaoService\";\r\n\r\nexport const CadastroDoacao = () => {\r\n  const [cpf, setCpf] = useState(\"\");\r\n  const [litros, setLitros] = useState(\"\");\r\n  const [data, setData] = useState(\"\");\r\n  const [sexo, setSexo] = useState(\"\");\r\n  const [cep, setCep] = useState(\"\");\r\n  const [numero, setNumero] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [tipoSanguineo, setTipoSanguineo] = useState(\"\");\r\n\r\n  const inputPasswordRef = useRef<HTMLInputElement>(null);\r\n\r\n  const showValidationErrorModal = (message: string) => {\r\n    const Toast = Swal.mixin({\r\n      toast: true,\r\n      position: \"top-end\",\r\n      showConfirmButton: false,\r\n      timer: 5000,\r\n      timerProgressBar: true,\r\n      didOpen: (toast) => {\r\n        toast.onmouseenter = Swal.stopTimer;\r\n        toast.onmouseleave = Swal.resumeTimer;\r\n      },\r\n    });\r\n\r\n    Toast.fire({\r\n      icon: \"error\",\r\n      title: message,\r\n    });\r\n\r\n  };\r\n\r\n    const showValidationSuccessModal = (message: string) => {\r\n      const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: \"top-end\",\r\n        showConfirmButton: false,\r\n        timer: 5000,\r\n        timerProgressBar: true,\r\n        didOpen: (toast) => {\r\n          toast.onmouseenter = Swal.stopTimer;\r\n          toast.onmouseleave = Swal.resumeTimer;\r\n        },\r\n      });\r\n\r\n      Toast.fire({\r\n        icon: \"success\",\r\n        title: message,\r\n      });\r\n    };\r\n\r\n    const [getUsuario, setgetUsuario] = useState<ICadastroDoacao | null>(null);\r\n\r\n    useEffect(() => {\r\n      if (cpf.trim() !== \"\") {\r\n        CadastroDoacaoService.getByCpf(cpf)\r\n          .then((result) => {\r\n            if (result instanceof Error) {\r\n              alert(result.message);\r\n            } else {\r\n              console.log(\"result\", result);\r\n              setgetUsuario(result);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            alert(error.message || \"Erro ao buscar dados.\");\r\n          });\r\n      }\r\n    }, [cpf]);\r\n\r\n    const validateForm = async () => {\r\n      if (cpf === \"\" || litros === \"\" || tipoSanguineo === \"\") {\r\n        showValidationErrorModal(\"Os Campos não pode estar em branco\");\r\n        return false;\r\n      } else if (parseInt(cpf) < 0 || parseFloat(litros) < 0) {\r\n        showValidationErrorModal(\"Valores negativos inseridos\");\r\n        return false;\r\n      } else if (cpf.length != 10) {\r\n        showValidationErrorModal(\"CPF inválido\");\r\n        return false;\r\n      } else if (!tipoSanguineo.toUpperCase) {\r\n        showValidationErrorModal(\r\n          \"Tipo sanguíneo deve conter letras maiúsculas\"\r\n        );\r\n        return false;\r\n      } else if (\r\n        !tipoSanguineo.includes(\"A+\") &&\r\n        !tipoSanguineo.includes(\"A-\") &&\r\n        !tipoSanguineo.includes(\"B+\") &&\r\n        !tipoSanguineo.includes(\"B-\") &&\r\n        !tipoSanguineo.includes(\"AB+\") &&\r\n        !tipoSanguineo.includes(\"AB-\") &&\r\n        !tipoSanguineo.includes(\"O+\") &&\r\n        !tipoSanguineo.includes(\"O-\")\r\n      ) {\r\n        showValidationErrorModal(\"Tipo sanguíneo incorreto\");\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    };\r\n\r\n    const handleCadastroEmpresaEndereco = useCallback(async () => {\r\n      try {\r\n        if (await validateForm()) {\r\n          const DoacaoData: ICadastroDoacaoCreate = {\r\n            quantidade: parseFloat(litros),\r\n            tipo: tipoSanguineo,\r\n            fkAgenda: null,\r\n          };\r\n          const resultado = CadastroDoacaoService.create(DoacaoData);\r\n          showValidationSuccessModal(\"Doação confirmada!\");\r\n          setCpf(\"\");\r\n          setData(\"\");\r\n          setCep(\"\");\r\n          setEmail(\"\");\r\n          setSexo(\"\");\r\n          setNumero(\"\");\r\n          setLitros(\"\");\r\n          setTipoSanguineo(\"\");\r\n        }\r\n      } catch (error) {\r\n        showValidationErrorModal(\"Erro ao confirmar doação\");\r\n      }\r\n    }, [litros, tipoSanguineo, validateForm]);\r\n\r\n    const handleClickNav2 = () => {\r\n      const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: \"top-end\",\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        timerProgressBar: true,\r\n        didOpen: (toast) => {\r\n          toast.onmouseenter = Swal.stopTimer;\r\n          toast.onmouseleave = Swal.resumeTimer;\r\n        },\r\n      });\r\n      Toast.fire({\r\n        icon: \"success\",\r\n        title: \"Doação não registrada\",\r\n      });\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <OndaLateralEsquerda />\r\n        <div className=\"tela\">\r\n          <MenuPerfilFuncionario nome=\"Paternezi\" />\r\n          <div className=\"cadastrarDoacao\">\r\n            <div className=\"topoTela\">\r\n              <h1 className=\"rowdies bold-30\">CADASTRAR DOAÇÂO</h1>\r\n            </div>\r\n            <div className=\"campos\">\r\n              <Input\r\n                className=\"camposInput rowdies\"\r\n                type=\"number\"\r\n                placeholder=\"CPF\"\r\n                value={cpf}\r\n                ref={inputPasswordRef}\r\n                onChange={(newValue) => setCpf(newValue)}\r\n              />\r\n              <Input\r\n                className=\"camposInput rowdies\"\r\n                type=\"number\"\r\n                placeholder=\"Litros Doados\"\r\n                value={litros}\r\n                ref={inputPasswordRef}\r\n                onChange={(newValue) => setLitros(newValue)}\r\n              />\r\n            </div>\r\n            <div className=\"quadro bg-branco\">\r\n              <div className=\"perfil\">\r\n                <img className=\"imgPerfil\" src={vetorImg[2]} alt=\"\" />\r\n                {getUsuario ? (\r\n                  <h3 className=\"item roboto sbold-20\">{getUsuario.nome}</h3>\r\n                ) : (\r\n                  <h3 className=\"item roboto sbold-20\">Nome Doador</h3>\r\n                )}\r\n              </div>\r\n              <div className=\"containerDoacao\">\r\n                <div className=\"colunas\">\r\n                  <div className=\"formularioDoacao\">\r\n                    <Input\r\n                      className=\"campoUsuario roboto\"\r\n                      type=\"text\"\r\n                      placeholder=\"Data de nascimento\"\r\n                      value={getUsuario?.nascimento}\r\n                      ref={inputPasswordRef}\r\n                      onChange={(newValue) => setData(newValue)}\r\n                    />\r\n                    <Input\r\n                      className=\"campoUsuario roboto\"\r\n                      type=\"number\"\r\n                      placeholder=\"CEP\"\r\n                      value={getUsuario?.cep}\r\n                      ref={inputPasswordRef}\r\n                      onChange={(newValue) => setCep(newValue)}\r\n                    />\r\n                    <Input\r\n                      className=\"campoUsuario roboto\"\r\n                      type=\"text\"\r\n                      placeholder=\"Email\"\r\n                      value={getUsuario?.email}\r\n                      ref={inputPasswordRef}\r\n                      onChange={(newValue) => setEmail(newValue)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"formularioDoacao\">\r\n                    <Input\r\n                      className=\"campoUsuario roboto\"\r\n                      type=\"text\"\r\n                      placeholder=\"Sexo Biológico\"\r\n                      value={getUsuario?.sexo}\r\n                      ref={inputPasswordRef}\r\n                      onChange={(newValue) => setSexo(newValue)}\r\n                    />\r\n                    <Input\r\n                      className=\"campoUsuario roboto\"\r\n                      type=\"tel\"\r\n                      placeholder=\"Numero Residencial\"\r\n                      value={getUsuario?.numeroCasa}\r\n                      ref={inputPasswordRef}\r\n                      onChange={(newValue) => setNumero(newValue)}\r\n                    />\r\n                    <Input\r\n                      className=\"campoUsuario roboto\"\r\n                      type=\"text\"\r\n                      placeholder=\"Tipo Sanguíneo\"\r\n                      value={getUsuario?.tipo}\r\n                      ref={inputPasswordRef}\r\n                      onChange={(newValue) => setTipoSanguineo(newValue)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"btnFinal\">\r\n              <button\r\n                onClick={handleClickNav2}\r\n                className=\"btn NaoConfirmarDoacao\"\r\n              >\r\n                Não Confirmar Doacao\r\n                <img src={vetorIcon[0]} alt=\"\" />\r\n              </button>\r\n              <button\r\n                onClick={handleCadastroEmpresaEndereco}\r\n                className=\"btn ConfirmarDoacao\"\r\n              >\r\n                Confirmar Doação\r\n                <img src={vetorIcon[0]} alt=\"\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n};\r\n","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\inicio\\PaginaInicial.tsx",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\cadastro\\Cadastro.tsx",["307","308","309"],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\cadastro\\CadastroDados.tsx",["310","311","312","313"],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\cadastro\\CadastroEmpresa.tsx",["314","315"],[],"import \"../../../html-css-template/css/homocentro.css\";\r\nimport { vetorImg } from \"../../shared/components/imagens\";\r\nimport { vetorIcon } from \"../../shared/components/imagens\";\r\n\r\nimport { useRef, useCallback, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { Input } from \"../../shared/components\";\r\nimport Swal from \"sweetalert2\";\r\nimport { CadastroEmpresaEnderecoService, ICadastroEmpresaEndereco } from \"../../shared/sevice/api/tarefas/cadastros/CadastroEmpresaEnderecoService\";\r\n\r\n  export const CadastroEmpresa = () => {\r\n\r\n    const [cep, setCep] = useState(\"\");\r\n    const [numero, setNumero] = useState(\"\");\r\n    const [cidade, setCidade] = useState(\"\");\r\n    const [bairro, setBairro] = useState(\"\");\r\n    const [rua, setRua] = useState(\"\");\r\n  \r\n    const inputPasswordRef = useRef<HTMLInputElement>(null);\r\n    const navegando = useNavigate();\r\n    \r\n    const showValidationErrorModal = (message: string) => {\r\n      const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: \"top-end\",\r\n        showConfirmButton: false,\r\n        timer: 5000,\r\n        timerProgressBar: true,\r\n        didOpen: (toast) => {\r\n          toast.onmouseenter = Swal.stopTimer;\r\n          toast.onmouseleave = Swal.resumeTimer;\r\n        },\r\n      });\r\n  \r\n      Toast.fire({\r\n        icon: \"error\",\r\n        title: message,\r\n      });\r\n    };\r\n    \r\n  \r\n    const validateForm = () => {\r\n      if (cidade === \"\" || bairro === \"\" || rua === \"\") {\r\n        showValidationErrorModal(\"Os Campos não podem estar em branco\");\r\n        return false;\r\n      } \r\n      else if (Number(cep) !== 8) {\r\n        showValidationErrorModal(\"CEP inválido\");\r\n        return false;\r\n      } \r\n      else if (Number(numero) <= 0) {\r\n        showValidationErrorModal(\"Valores negativos inseridos\");\r\n        return false;\r\n      } \r\n\r\n      else if (/[^a-zA-Z0-9\\s]/.test(rua)) {\r\n        showValidationErrorModal(\"Logradouro não pode conter caracteres especiais\");\r\n      }\r\n\r\n      else if (/[^a-zA-Z0-9\\s]/.test(bairro)) {\r\n        showValidationErrorModal(\"bairro não pode conter caracteres especiais\");\r\n      }\r\n\r\n      else if (/[^a-zA-Z0-9\\s]/.test(cidade)) {\r\n        showValidationErrorModal(\"Cidade não pode conter caracteres especiais\");\r\n      }\r\n\r\n      else {\r\n        navegando(\"/login\");\r\n        return true;\r\n      }\r\n      \r\n    };\r\n\r\n    const handleCadastroEmpresaEndereco = useCallback(async () => {\r\n      try {\r\n        if (validateForm()) {\r\n          const enderecoData: ICadastroEmpresaEndereco = {\r\n            cidade: cidade,\r\n            bairro: bairro,\r\n            cep: parseInt(cep),\r\n            logradouro: \"Rua\",\r\n            rua: rua,\r\n            numero: parseInt(numero),\r\n            fkUsuario: null,\r\n            fkHospital: sessionStorage.getItem(\"idHospital\")\r\n        };\r\n          const resultado = CadastroEmpresaEnderecoService.create(enderecoData);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Erro ao cadastrar empresa:\", error);\r\n      }\r\n    }, [cidade, bairro, cep, rua, numero, validateForm]);\r\n\r\n  const handleClickNav2 = () => {\r\n    navegando(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"img\">\r\n        <img className=\"onda1\" src={vetorImg[4]} alt=\"\" />\r\n        <img className=\"imgDoe\" src={vetorImg[1]} alt=\"\" />\r\n      </div>\r\n\r\n      <header className=\"header1\">\r\n        <div className=\"componente1\">\r\n          <img src={vetorImg[3]} alt=\"Vitae\" />\r\n          <a className=\"roboto bold-20\" href=\"/pagina-inicial\">\r\n            Home\r\n          </a>\r\n        </div>\r\n\r\n        <div className=\"nextPage\">\r\n          <div>\r\n            <h3>Já tem conta ?</h3>\r\n            <h3>Então vamos logar!</h3>\r\n          </div>\r\n\r\n          <button onClick={handleClickNav2} className=\"btn logar bold-20\">\r\n            Logar\r\n            <img src={vetorIcon[0]} alt=\"\" />\r\n          </button>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"container1\">\r\n        <div className=\"formulario1\">\r\n          <div className=\"cadastro\">\r\n            <h1>Cadastre-se</h1>\r\n            <h1 className=\"text-title\">Bem vindo!!</h1>\r\n            <h1 className=\"text-title\">\r\n              Cadastre as informações do Hemocentro\r\n            </h1>\r\n          </div>\r\n          <div className=\"inputs\">\r\n            <Input\r\n              className={\"input-size\"}\r\n              placeholder={\"CEP\"}\r\n              type=\"number\"\r\n              value={cep}\r\n              onChange={(newValue) => setCep(newValue)}\r\n              onPressEnter={() => inputPasswordRef.current?.focus()}\r\n            />\r\n            <Input\r\n              className={\"input-size\"}\r\n              placeholder={\"Cidade\"}\r\n              type=\"text\"\r\n              value={cidade}\r\n              ref={inputPasswordRef}\r\n              onChange={(newValue) => setCidade(newValue)}\r\n              onPressEnter={() => inputPasswordRef.current?.focus()}\r\n            />\r\n            <Input\r\n              className={\"input-size\"}\r\n              placeholder={\"Bairro\"}\r\n              type=\"text\"\r\n              value={bairro}\r\n              ref={inputPasswordRef}\r\n              onChange={(newValue) => setBairro(newValue)}\r\n              onPressEnter={() => inputPasswordRef.current?.focus()}\r\n            />\r\n            <Input\r\n              className={\"input-size\"}\r\n              placeholder={\"Rua\"}\r\n              type=\"text\"\r\n              value={rua}\r\n              ref={inputPasswordRef}\r\n              onChange={(newValue) => setRua(newValue)}\r\n              onPressEnter={() => inputPasswordRef.current?.focus()}\r\n            />\r\n            <Input\r\n              className={\"input-size\"}\r\n              placeholder={\"Número\"}\r\n              type=\"number\"\r\n              value={numero}\r\n              ref={inputPasswordRef}\r\n              onChange={(newValue) => setNumero(newValue)}\r\n              onPressEnter={() => inputPasswordRef.current?.focus()}\r\n            />\r\n          </div>\r\n          <div className=\"button\">\r\n            <button onClick={handleCadastroEmpresaEndereco} className=\"btn cadastrar bold-20\">\r\n              Cadastrar\r\n              <img src={vetorIcon[0]} alt=\"\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\inicio\\saiba-mais\\SaibaMais.tsx",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\login\\Login.tsx",["316"],[],"import '../../../html-css-template/css/login.css'\r\nimport '../../../html-css-template/css/geral.css'\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nimport { vetorImg } from '../../shared/components/imagens';\r\nimport { vetorIcon } from '../../shared/components/imagens';\r\nimport { ILogin, ITokenId, TarefasService } from '../../shared/sevice/api/tarefas/TarefasService';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { SetStateAction, useState } from 'react';\r\nimport { ApiException } from '../../shared/sevice/api/ApiException';\r\n\r\nexport const Login = () => {\r\n    const navegando = useNavigate();\r\n    const [email, setEmail] = useState('');\r\n    const [senha, setSenha] = useState('');\r\n\r\n    const loginData: ILogin = {\r\n        email: email,\r\n        senha: senha\r\n    };\r\n\r\n    const navegarClick2 = () => {\r\n        navegando(\"/cadastro-usuario\");\r\n    }\r\n\r\n    const handleEmailChange = (event: { target: { value: SetStateAction<string>; }; }) => {\r\n        setEmail(event.target.value);\r\n    };\r\n\r\n    const handleSenhaChange = (event: { target: { value: SetStateAction<string>; }; }) => {\r\n        setSenha(event.target.value);\r\n    };\r\n\r\n    const handleBlurEmail = () => {\r\n        validateEmail();\r\n    }\r\n\r\n    const handleBlurSenha = () => {\r\n        validateSenha();\r\n    }\r\n\r\n    const showValidationErrorModal = (message: string) => {\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: \"top-end\",\r\n            showConfirmButton: false,\r\n            timer: 5000,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.onmouseenter = Swal.stopTimer;\r\n                toast.onmouseleave = Swal.resumeTimer;\r\n            }\r\n        });\r\n\r\n        Toast.fire({\r\n            icon: \"error\",\r\n            title: message\r\n        });\r\n    };\r\n\r\n    function validateEmail(): boolean {\r\n        // Verifica se o e-mail tem pelo menos um caractere antes e depois do \"@\" e um ponto depois do \"@\"\r\n        const regexEmail = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        if (!regexEmail.test(email)) {\r\n            showValidationErrorModal(\r\n                \"O e-mail deve conter pelo menos um caractere antes e depois do @ e um ponto depois do @\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function validateSenha(): boolean {\r\n        // Verifica se a senha tem pelo menos 8 caracteres\r\n        if (senha.length < 8) {\r\n            showValidationErrorModal(\r\n                \"A senha precisa ter no mínimo 8 caracteres\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const validateEmailSenha = async () => {\r\n\r\n        // Verificar se algum campo está vazio\r\n        if (\r\n            email === '' ||\r\n            senha === ''\r\n        ) {\r\n            showValidationErrorModal(\"Por favor, preencha todos os campos.\");\r\n            return false;\r\n        }\r\n\r\n        const result: ITokenId | ApiException = await TarefasService.postLogin(loginData);\r\n        \r\n        if('message' in result){\r\n            showValidationErrorModal(\"Email ou Senha inválido.\");\r\n        } else {\r\n            // Salvar token e Id no sessionStorage\r\n            sessionStorage.setItem(\"id\", result.Id);\r\n            sessionStorage.setItem(\"token\", result.token);\r\n            return (\r\n                validateEmail() &&\r\n                validateSenha() &&\r\n                true\r\n            );\r\n        }\r\n\r\n        // Chamando todas as funções de validação\r\n        \r\n    };\r\n\r\n    const navegarClick = async () => {\r\n        // Para o caso de todos os campos estarem validados\r\n        if (await validateEmailSenha()) {\r\n            // Todos os campos foram preenchidos e o usuário está apto\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: \"top-end\",\r\n                showConfirmButton: false,\r\n                timer: 2100,\r\n                timerProgressBar: true,\r\n                didOpen: (toast) => {\r\n                    toast.onmouseenter = Swal.stopTimer;\r\n                    toast.onmouseleave = Swal.resumeTimer;\r\n                }\r\n            });\r\n\r\n            Toast.fire({\r\n                icon: \"success\",\r\n                title: \"Login feito com sucesso!\"\r\n            });\r\n            await new Promise(resolve => setTimeout(resolve, 2000));\r\n            navegando(\"/perfil-usuario\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"bg-imgOndaLogo\">\r\n                <img className='onda5' src={vetorImg[5]} alt=\"\" />\r\n            </div>\r\n            <header className='header5'>\r\n                <div className=\"nextPage2 roboto\">\r\n                    <div>\r\n                        <h3>Ainda não tem conta?</h3>\r\n                        <h3>Então vamos cadastrar!</h3>\r\n                    </div>\r\n                    <button onClick={navegarClick2} className=\"btn cadastrar bold-20\" >\r\n                        Cadastro\r\n                        <img src={vetorIcon[0]} alt=\"\" />\r\n                    </button>\r\n                </div>\r\n                <div className=\"componente5\">\r\n                    <a className=\"roboto bold-20\" href=\"/pagina-inicial\">Home</a>\r\n                    <img src={vetorImg[3]} alt=\"Vitae\" />\r\n                </div>\r\n            </header>\r\n\r\n            <div className=\"container5\">\r\n                <div className=\"imgDoadores\">\r\n                    <img className=\"imgCara\" src={vetorImg[12]} alt=\"\" />\r\n                </div>\r\n                <div className=\"formulario5\">\r\n                    <h1 className='rowdies'>LOGIN</h1>\r\n                    <p className=\"rowdies regular-24 \">Bem-Vindo de volta!!</p>\r\n                    <p className=\"rowdies regular-24 \">Logue com suas informações pessoais</p>\r\n                    <input className=\"\" type=\"text\" placeholder=\"Email\" value={email} onBlur={handleBlurEmail} onChange={handleEmailChange} />\r\n                    <input className=\"\" type=\"password\" placeholder=\"Senha\" value={senha} onBlur={handleBlurSenha} onChange={handleSenhaChange} />\r\n                    <button onClick={navegarClick} className=\"btn logar bold-20\" >\r\n                        Logar\r\n                        <img src={vetorIcon[0]} alt=\"\" />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\usuario\\mapa\\Mapa.tsx",["317"],[],"import '../../../../html-css-template/css/maps.css'\r\n//import '../../../../js/maps.js'\r\nimport { vetorIcon } from '../../../shared/components/imagens';\r\n\r\nimport { MenuPerfilUsuario, OndaLateralEsquerda } from \"../../../shared/components\";\r\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\r\n\r\nexport const Mapa = () => {\r\n    const mapStyles = {\r\n        height: '400px',\r\n        width: '100%',\r\n    };\r\n\r\n    const defaultCenter = {\r\n        lat: -23.537748,\r\n        lng: -46.461309,\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <OndaLateralEsquerda />\r\n            <div className=\"conteudo1\">\r\n                <MenuPerfilUsuario nome=\"Diego\" />\r\n                <div className=\"mapaMundi\">\r\n                    <div className=\"rowdies topo\">\r\n                        <div className=\"titulo\">\r\n                            <h1>Ver mapa</h1>\r\n                        </div>\r\n                        <div className=\"selecionaCep roboto\">\r\n                            Informe seu CEP:\r\n                            <input id=\"cep\" placeholder=\"08332-394\" />\r\n                            <span //onClick=\"recuperaLagLog()\">\r\n                            ></span>\r\n                            <button className=\"btn\">Pesquisar</button>\r\n                        </div>\r\n                        <div className=\"logo\">\r\n                            <img src=\"../assets/LogoVitai.png\" alt=\"\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mapa\">\r\n\r\n                        <LoadScript googleMapsApiKey=\"AIzaSyB-b9znqlJ4a9CNUI-QoaqpXczDscalBc8\">\r\n                            <GoogleMap\r\n                                mapContainerStyle={mapStyles}\r\n                                zoom={10}\r\n                                center={defaultCenter}\r\n                            >\r\n                                <Marker\r\n                                    position={{ lat: -23.537748, lng: -46.461309 }}\r\n                                />\r\n                            </GoogleMap>\r\n                        </LoadScript>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\funcionario\\cadastro-funcionario\\CadastroFuncionario.tsx",["318","319","320","321","322","323"],[],"import \"../../../../html-css-template/css/novoFuncionario.css\";\r\n\r\nimport { vetorImg } from \"../../../shared/components/imagens\";\r\nimport { vetorIcon } from \"../../../shared/components/imagens\";\r\n\r\nimport { useState, useRef, useCallback } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Input } from \"../../../shared/components\";\r\nimport { CadastroFuncionarioService } from \"../../../shared/sevice/api/tarefas/cadastros/CadastroFuncionarioService\";\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nexport const CadastroFuncionario = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [nome, setNome] = useState(\"\");\r\n  const [cargo, setCargo] = useState(\"\");\r\n  const [cpf, setCpf] = useState(\"\");\r\n  const [senha, setSenha] = useState(\"\");\r\n  const [confSenha, setConfSenha] = useState(\"\");\r\n\r\n  sessionStorage.setItem(\"email\", email.trim());\r\n  sessionStorage.setItem(\"senha\", senha.trim());\r\n  sessionStorage.setItem(\"confSenha\", confSenha);\r\n\r\n  const navegando = useNavigate();\r\n  const inputPasswordRef = useRef<HTMLInputElement>(null);\r\n\r\n  const showValidationErrorModal = (message: string) => {\r\n    const Toast = Swal.mixin({\r\n      toast: true,\r\n      position: \"top-end\",\r\n      showConfirmButton: false,\r\n      timer: 5000,\r\n      timerProgressBar: true,\r\n      didOpen: (toast) => {\r\n        toast.onmouseenter = Swal.stopTimer;\r\n        toast.onmouseleave = Swal.resumeTimer;\r\n      },\r\n    });\r\n\r\n    Toast.fire({\r\n      icon: \"error\",\r\n      title: message,\r\n    });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    if (\r\n      email === \"\" ||\r\n      nome === \"\" ||\r\n      cargo === \"\" ||\r\n      senha === \"\" ||\r\n      confSenha === \"\"\r\n    ) {\r\n      showValidationErrorModal(\"Os Campos não podem estar em branco\");\r\n      return false;\r\n    } \r\n    \r\n    else if (!email.includes(\"@\")) {\r\n      showValidationErrorModal(\"Email deve conter @\");\r\n      return false;\r\n    } \r\n    \r\n    else if (\r\n      !email.includes(\"outlook.com\") &&\r\n      !email.includes(\"hotmail.com\") &&\r\n      !email.includes(\"gmail.com\") &&\r\n      !email.includes(\"yahoo.com\") &&\r\n      !email.includes(\"icloud.com\")\r\n    ) {\r\n      showValidationErrorModal(\"Insira um domínio válido\");\r\n      return false;\r\n    } \r\n    \r\n    else if (parseInt(cpf) < 0) {\r\n      showValidationErrorModal(\"Valores negativos inseridos\");\r\n      return false;\r\n    } \r\n    \r\n    else if (cpf.length !== 11) {\r\n      showValidationErrorModal(\"CPF inválido\");\r\n      return false;\r\n    } \r\n    \r\n    else if (senha.length < 8) {\r\n      showValidationErrorModal(\"Digite uma senha forte\");\r\n      return false;\r\n    } \r\n    \r\n    else if (!/\\s/.test(nome) && nome.length < 15) {\r\n      showValidationErrorModal(\"Digite o nome completo\");\r\n      return false;\r\n    } \r\n    \r\n    else if (nome.length > 80) {\r\n      showValidationErrorModal(\"Nome incorreto\");\r\n      return false;\r\n    } \r\n    \r\n    else if (confSenha === senha) {\r\n      return true;\r\n    } \r\n    \r\n    else {\r\n      showValidationErrorModal(\"Senhas diferentes\");\r\n      return false;\r\n    }\r\n\r\n  };\r\n\r\n  const handleCadastroFuncionario = useCallback( async () => {\r\n    try {\r\n      if (validateForm()) {\r\n        await CadastroFuncionarioService.create({\r\n          nome: nome,\r\n          email: email,\r\n          senha: senha,\r\n          role: cargo,\r\n          cpf: cpf,\r\n        });\r\n        \r\n        const Toast = Swal.mixin({\r\n          toast: true,\r\n          position: \"top-end\",\r\n          showConfirmButton: false,\r\n          timer: 3000,\r\n          timerProgressBar: true,\r\n          didOpen: (toast) => {\r\n            toast.onmouseenter = Swal.stopTimer;\r\n            toast.onmouseleave = Swal.resumeTimer;\r\n          },\r\n        });\r\n        Toast.fire({\r\n          icon: \"success\",\r\n          title: \"Funcionario cadastrado\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erro ao cadastrar funcionário:\", error);\r\n    }\r\n  }, [nome, email, senha, cargo, cpf, validateForm]);\r\n\r\n  const handleClickNav = () => {\r\n    navegando(\"/pagina-inicial\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"geral\">\r\n        <div className=\"menu\">\r\n          <h1 className=\"rowdies bold-30\">Olá,Pedro!</h1>\r\n          <div className=\"menuItens\">\r\n            <a href=\"\" className=\"now roboto sbold-20\">\r\n              Cadastro Funcionario\r\n            </a>\r\n            <a href=\"\" className=\"item roboto sbold-20\">\r\n              Requisitar Doação\r\n            </a>\r\n            <a href=\"\" className=\"item roboto sbold-20\">\r\n              Cadastrar Doação\r\n            </a>\r\n          </div>\r\n          <button onClick={handleClickNav} className=\"btn bg-vermelhoClaro\">\r\n            Sair\r\n          </button>\r\n        </div>\r\n        <div className=\"conteudo\">\r\n          <div className=\"rowdies topo\">\r\n            <div className=\"titulo\">\r\n              <h1>NOVO FUNCIONARIO</h1>\r\n            </div>\r\n\r\n            <div className=\"logo\">\r\n              <img src={vetorImg[3]} alt=\"\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"ondas\">\r\n            <div className=\"waves\">\r\n              <img src={vetorImg[6]} alt=\"\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"containerCadastro\">\r\n            <div className=\"cadastroFuncionario roboto\">\r\n              <div className=\"cadastroInputs\">\r\n                <Input\r\n                  className={\"input-size\"}\r\n                  type=\"text\"\r\n                  placeholder={\"Nome Completo\"}\r\n                  value={nome}\r\n                  ref={inputPasswordRef}\r\n                  onChange={(newValue) => setNome(newValue)}\r\n                />\r\n                <Input\r\n                  className={\"input-size\"}\r\n                  type=\"number\"\r\n                  placeholder={\"CPF\"}\r\n                  value={cpf}\r\n                  ref={inputPasswordRef}\r\n                  onChange={(newValue) => setCpf(newValue)}\r\n                />\r\n                <Input\r\n                  className={\"input-size\"}\r\n                  type=\"text\"\r\n                  placeholder={\"Cargo\"}\r\n                  value={cargo}\r\n                  ref={inputPasswordRef}\r\n                  onChange={(newValue) => setCargo(newValue)}\r\n                />\r\n                <Input\r\n                  className={\"input-size\"}\r\n                  type=\"text\"\r\n                  placeholder={\"Email\"}\r\n                  value={email}\r\n                  ref={inputPasswordRef}\r\n                  onChange={(newValue) => setEmail(newValue)}\r\n                />\r\n                <div className=\"confirmaSenha\">\r\n                  <Input\r\n                    className={\"input-size\"}\r\n                    placeholder={\"Senha\"}\r\n                    value={senha}\r\n                    onChange={(newValue) => setSenha(newValue)}\r\n                  />\r\n                  <Input\r\n                    className={\"input-size\"}\r\n                    type=\"text\"\r\n                    placeholder={\"Confirma senha\"}\r\n                    value={confSenha}\r\n                    ref={inputPasswordRef}\r\n                    onChange={(newValue) => setConfSenha(newValue)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button onClick={handleCadastroFuncionario} className=\"btnCadastrar btn\">\r\n              Cadastrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\funcionario\\requisicao\\Requisicao.tsx",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\funcionario\\agenda\\AgendaHistorico.tsx",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\usuario\\mapa\\HospitalDetalhes.tsx",["324"],[],"import '../../../../html-css-template/css/telaDetalheHospital.css'\r\n\r\nimport { MenuPerfilFuncionario, MenuPerfilUsuario, OndaLateralEsquerda } from \"../../../shared/components\";\r\n\r\n\r\nexport const HospitalDetalhes = () => {\r\n    return (\r\n        <>\r\n        <OndaLateralEsquerda />\r\n            <div className=\"flexContainer\">\r\n                <MenuPerfilUsuario nome=\"Diego\" />\r\n                <div className=\"conteudoHospital\">\r\n                    <div className=\"containerHospital\">\r\n                        <h1 className=\"rowdies bold-30\" >VER MAPA</h1>\r\n                    </div>\r\n                    <div className=\"primeiroQuadro\">\r\n                        <h2 className=\"titleQuadro roboto sbold-24\">Disponível</h2>\r\n                        <div className=\"textosQuadro\">\r\n                            <p className=\"roboto sbold-16\">Hospital São Mateus</p>\r\n\r\n                            <p className=\"roboto sbold-16\">Descrição: Local destinado ao atendimento de Doadores de sangue</p>\r\n\r\n                            <p className=\"roboto sbold-16\">Endereço: Rua morro das pedras, 120 -  são Paulo</p>\r\n\r\n                            <p className=\"roboto sbold-16\">Atendimento: Seg a Sab - 7:00 ás 12:00</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"primeiroQuadro\">\r\n                        <h2 className=\"titleQuadro roboto sbold-24\">Prioridade de doações</h2>\r\n                        <div className=\"textosQuadro\">\r\n                            <div className=\"flexColumn\">\r\n                                <p className=\"roboto sbold-16 mgAtm\">Sangue:\r\n                                    Tipo Sanguineo O+</p>\r\n                                <select className=\"opitionUm\">\r\n                                    <option disabled selected>Motivo do requerimento</option>\r\n                                    <option value=\"\">Sim</option>\r\n                                    <option value=\"Feminino\">Não</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"flexColumn\">\r\n                                <p className=\"roboto sbold-16\">Sangue:\r\n                                    Tipo Sanguineo A+</p>\r\n                                <select className=\"opitionUm\">\r\n                                    <option disabled selected>Motivo do requerimento</option>\r\n                                    <option value=\"\">Sim</option>\r\n                                    <option value=\"Feminino\">Não</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"flexColumn\">\r\n                                <p className=\"roboto sbold-16\">Sangue:\r\n                                    Tipo Sanguineo B+</p>\r\n                                <select className=\"opitionUm\">\r\n                                    <option disabled selected>Motivo do requerimento</option>\r\n                                    <option value=\"\">Sim</option>\r\n                                    <option value=\"Feminino\">Não</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"imgTuboEnsaio\">\r\n                    <img className=\"imgTubo\" src=\"../assets/TuboEnsaio.png\" alt=\"\" />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\usuario\\quiz\\Quiz.tsx",["325"],[],"import { SetStateAction, useCallback, useRef, useState } from 'react';\r\nimport '../../../../html-css-template/css/telaAptidao.css'\r\nimport Swal from 'sweetalert2'\r\nimport { MenuPerfilUsuario, OndaLateralEsquerda } from '../../../shared/components';\r\nimport { vetorIcon, vetorImg } from '../../../shared/components/imagens';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { IQuiz, QuizService } from '../../../shared/sevice/api/tarefas/quizService';\r\nimport { ApiException } from '../../../shared/sevice/api/ApiException';\r\n\r\n\r\nexport const Quiz = () => {\r\n    const [altura, setAltura] = useState('');\r\n    const [peso, setPeso] = useState('');\r\n    const [tatuagem, setTatuagem] = useState('');\r\n    const [relacaoSexual, setRelacaoSexual] = useState('');\r\n    const [desconforto, setDesconforto] = useState('');\r\n    const [usoMedicamento, setUsoMedicamento] = useState('');\r\n    const [dst, setDst] = useState('');\r\n    const [vacinaCovid, setVacinaCovid] = useState('');\r\n    const [apto, setApto] = useState(Boolean);\r\n\r\n    const handleAlturaChange = (event: { target: { value: SetStateAction<string>; }; }) => {\r\n        setAltura(event.target.value);\r\n    };\r\n    const handlePesoChange = (event: { target: { value: SetStateAction<string>; }; }) => {\r\n        setPeso(event.target.value);\r\n    };\r\n    const handleOptionChange = (event: { target: { value: string; }; }, setState: (arg0: string) => void) => {\r\n        setState(event.target.value);\r\n    };\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const modalErro = (message: string) => {\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: \"top-end\",\r\n            showConfirmButton: false,\r\n            timer: 2500,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.onmouseenter = Swal.stopTimer;\r\n                toast.onmouseleave = Swal.resumeTimer;\r\n            }\r\n        });\r\n\r\n        Toast.fire({\r\n            icon: \"error\",\r\n            title: message\r\n        });\r\n    };\r\n\r\n    const modalSucesso = async () => {\r\n        await Swal.fire({\r\n            toast: true,\r\n            position: \"top-end\",\r\n            showConfirmButton: false,\r\n            timer: 2500,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.onmouseenter = Swal.stopTimer;\r\n                toast.onmouseleave = Swal.resumeTimer;\r\n            },\r\n            icon: 'success',\r\n            title: 'Direcionando para a tela de perfil.',\r\n        });\r\n    };\r\n\r\n    const funcaoAoClicar = useCallback(async () => {\r\n\r\n\r\n        const camposVazios = [\r\n            altura,\r\n            peso,\r\n            tatuagem,\r\n            relacaoSexual,\r\n            desconforto,\r\n            usoMedicamento,\r\n            dst,\r\n            vacinaCovid\r\n        ].some((campo) => campo.trim() === '');\r\n\r\n        if (parseFloat(altura) < 0) {\r\n            modalErro(\"Altura não pode ser negativa.\");\r\n            return;\r\n        }\r\n\r\n        if (parseFloat(peso) < 0) {\r\n            modalErro(\"Peso não pode ser negativo.\");\r\n            return;\r\n        }\r\n\r\n        if (camposVazios) {\r\n            modalErro(\"Por favor, preencha todos os campos do formulário.\");\r\n            return;\r\n        }\r\n\r\n        if (parseFloat(altura) <= 1 || parseFloat(altura) > 3) {\r\n            modalErro(\"Altura inválida. Por favor, insira uma altura válida.\");\r\n            return;\r\n        }\r\n\r\n        console.log('Antes de setApto(true):', apto);\r\n        setApto(true);\r\n        console.log('Depois de setApto(true):', apto);\r\n\r\n        console.log('tatuagem:', apto);\r\n        console.log('dst:', apto);\r\n        console.log('peso:', apto);\r\n\r\n        var teste = true;\r\n\r\n        if (tatuagem === 'sim' || dst === 'sim' || parseFloat(peso) < 50 || parseFloat(peso) >= 150) {\r\n            console.log('Condição para setApto(false) atendida');\r\n            teste = false;\r\n            console.log('Esta apto:', apto);\r\n        }\r\n\r\n        const quizData: IQuiz = {\r\n            altura: parseFloat(altura),\r\n            peso: parseFloat(peso),\r\n            apto: teste,\r\n        };\r\n\r\n\r\n        const resultado = await QuizService.updateById(sessionStorage.getItem(\"id\"), quizData);\r\n\r\n        if (resultado instanceof ApiException) {\r\n            modalErro(\"Erro ao atualizar perfil.\");\r\n            return;\r\n        } else {\r\n            await modalSucesso();\r\n            setTimeout(() => navigate(\"/perfil-usuario\"), 0);\r\n        }\r\n    }, [altura, peso, tatuagem, relacaoSexual, desconforto, usoMedicamento, dst, vacinaCovid, apto, navigate]);\r\n\r\n\r\n    \r\n    // ------------------------------------------\r\n    //Tela\r\n    // ------------------------------------------\r\n    return (\r\n        <>\r\n            <OndaLateralEsquerda />\r\n            <div className=\"flexContainer\">\r\n                <MenuPerfilUsuario nome=\"Diego\" />\r\n                <div className=\"conteudoQuiz\">\r\n                    <div className=\"containerAptidao\">\r\n                        <h1 className=\"rowdies bold-30\">QUIZ DE APTIDÃO</h1>\r\n                    </div>\r\n                    <div className=\"primeiroQuiz\">\r\n                        <div className=\"quizUm\">\r\n                            <h3 className=\"now roboto sbold-20\">Informações pessoais</h3>\r\n                            <div className=\"divQuiz\">\r\n                                <input\r\n                                    className=\"inputQuiz rowdies bold-30\"\r\n                                    id=\"placeholder-number\"\r\n                                    type=\"number\"\r\n                                    placeholder=\"Altura\"\r\n                                    value={altura}\r\n                                    onChange={handleAlturaChange}\r\n                                />\r\n\r\n                                <input\r\n                                    className=\"inputQuiz rowdies bold-30\"\r\n                                    id=\"placeholder-number\"\r\n                                    type=\"number\"\r\n                                    placeholder=\"Peso\"\r\n                                    value={peso}\r\n                                    onChange={handlePesoChange}\r\n                                />\r\n\r\n                                <select\r\n                                    className=\"quizOpition\"\r\n                                    onChange={(event) => handleOptionChange(event, setTatuagem)}\r\n                                >\r\n                                    <option disabled selected>Fez alguma tatuagem nos ultimos 6 meses ?</option>\r\n                                    <option value=\"sim\">Sim</option>\r\n                                    <option value=\"nao\">Não</option>\r\n                                </select>\r\n\r\n                                <select\r\n                                    className=\"quizOpition\"\r\n                                    onChange={(event) => handleOptionChange(event, setRelacaoSexual)}\r\n                                >\r\n                                    <option disabled selected>Teve algum tipo de relação sexual recentimente ?</option>\r\n                                    <option value=\"sim\">Sim</option>\r\n                                    <option value=\"nao\">Não</option>\r\n                                </select>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"segundoQuiz\">\r\n                        <div className=\"quizDois\">\r\n                            <h3 className=\"now roboto sbold-20\">Saúde</h3>\r\n                            <div className=\"comboBox\">\r\n\r\n                                <select\r\n                                    className=\"quizOpition\"\r\n                                    onChange={(event) => handleOptionChange(event, setDesconforto)}\r\n                                >\r\n                                    <option disabled selected>Sente algum desconforto ou mal estar ?</option>\r\n                                    <option value=\"sim\">Sim</option>\r\n                                    <option value=\"nao\">Não</option>\r\n                                </select>\r\n                                <select\r\n                                    className=\"quizOpition\"\r\n                                    onChange={(event) => handleOptionChange(event, setUsoMedicamento)}\r\n                                >\r\n                                    <option disabled selected>Fez ou faz uso de algum medicamento ?</option>\r\n                                    <option value=\"sim\">Sim</option>\r\n                                    <option value=\"nao\">Não</option>\r\n                                </select>\r\n                                <select\r\n                                    className=\"quizOpition\"\r\n                                    onChange={(event) => handleOptionChange(event, setDst)}\r\n                                >\r\n                                    <option disabled selected>Tem algum tipo de DST ?</option>\r\n                                    <option value=\"sim\">Sim</option>\r\n                                    <option value=\"nao\">Não</option>\r\n                                </select>\r\n                                <select\r\n                                    className=\"quizOpition\"\r\n                                    onChange={(event) => handleOptionChange(event, setVacinaCovid)}\r\n                                >\r\n                                    <option disabled selected>Tomou alguma vacina contra covid recentimente ?</option>\r\n                                    <option value=\"sim\">Sim</option>\r\n                                    <option value=\"nao\">Não</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"divImgAptidao\">\r\n                    <img className=\"imgTuboAptidao\" src={vetorImg[11]} alt=\"\" />\r\n                    <div className='divBtn'>\r\n                        <button onClick={funcaoAoClicar} className=\"btn avancar bold-20\" >\r\n                            Avançar\r\n                            <img src={vetorIcon[0]} alt=\"\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\usuario\\agenda\\Agendamento.tsx",["326"],[],"import '../../../../html-css-template/css/Agendamento.css'\r\n\r\nimport { useCallback, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { Agenda } from './components/Agenda';\r\nimport { Horario } from './components/Horario';\r\nimport { Hemocentro } from './components/Hemocentro';\r\nimport { vetorIcon } from '../../../shared/components/imagens';\r\nimport { MenuPerfilUsuario, OndaLateralEsquerda } from '../../../shared/components';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const Agendamento = () => {\r\n\r\n    const [isMostrarHemo, setIsMostrarHemo] = useState(false);\r\n    const [isMostrarHora, setIsMostrarHora] = useState(false);\r\n\r\n    const navegando = useNavigate();\r\n\r\n    const mostrarComponenteHemo = () => {\r\n        if (isMostrarHora) setIsMostrarHora(false);\r\n        setIsMostrarHemo(true);\r\n    }\r\n\r\n    const fecharComponenteHemo = () => {\r\n        setIsMostrarHemo(false);\r\n    }\r\n\r\n    const mostrarComponenteHora = () => {\r\n        if (isMostrarHemo) setIsMostrarHemo(false);\r\n        setIsMostrarHora(true);\r\n    }\r\n\r\n    const fecharComponenteHora = () => {\r\n        setIsMostrarHora(false);\r\n    }\r\n\r\n    const showConfirmForm = (message: string) => {\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: \"top-end\",\r\n            showConfirmButton: false,\r\n            timer: 5000,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.onmouseenter = Swal.stopTimer;\r\n                toast.onmouseleave = Swal.resumeTimer;\r\n            }\r\n        });\r\n\r\n        Toast.fire({\r\n            icon: \"success\",\r\n            title: message\r\n        });\r\n    };\r\n\r\n    const showWrongForm = (message: string) => {\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: \"top-end\",\r\n            showConfirmButton: false,\r\n            timer: 5000,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.onmouseenter = Swal.stopTimer;\r\n                toast.onmouseleave = Swal.resumeTimer;\r\n            }\r\n        });\r\n\r\n        Toast.fire({\r\n            icon: \"error\",\r\n            title: message\r\n        });\r\n    };\r\n\r\n    const validacao = () => {\r\n        const dia = sessionStorage.getItem('data');\r\n        const hemo = sessionStorage.getItem('hemocentro');\r\n        const hora = sessionStorage.getItem('hora');\r\n\r\n        if (dia === null) {\r\n            showWrongForm(\"Nenhum dia foi selecionado. Escolha um para prosseguir.\");\r\n            return false;\r\n        }\r\n        else if (Number(hemo) === 0) {\r\n            showWrongForm(\"Nenhum hemocentro foi selecionado. Escolha um para prosseguir.\");\r\n            return false;\r\n        }\r\n        else if (Number(hora) === 0) {\r\n            showWrongForm(\"Nenhum horário foi selecionado. Escolha um para prosseguir.\");\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const agendar = useCallback(async () => {\r\n\r\n        if (validacao()) {\r\n            showConfirmForm(\"Agendamento realizado com sucesso, indo para aba Histórico\");\r\n            await new Promise(resolve => setTimeout(resolve, 2000));\r\n            navegando(\"/perfil-usuario/historico\");\r\n            sessionStorage.removeItem('data');\r\n            sessionStorage.removeItem('hemocentro');\r\n            sessionStorage.removeItem('hora');\r\n        }\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <OndaLateralEsquerda />\r\n            <div className=\"container\">\r\n                <MenuPerfilUsuario nome=\"Diego\" />\r\n                <div className=\"agenda\">\r\n                    <header className=\"tituloAgenda\">\r\n                        <h1 className=\"rowdies\">AGENDA</h1>\r\n                    </header>\r\n                    <Agenda />\r\n                    {isMostrarHemo &&\r\n                        <Hemocentro onChange={fecharComponenteHemo} />\r\n                    }\r\n                    {isMostrarHora &&\r\n                        <Horario onChange={fecharComponenteHora} />\r\n                    }\r\n                </div>\r\n                <div className=\"confirmar\">\r\n                    <div className=\"escolha\">\r\n                        <h2 className=\"rowdies\">HEMOCENTRO</h2>\r\n                        <button onClick={mostrarComponenteHemo} className=\"btn roboto bg-vermelhoClaro\">\r\n                            Escolha um Hemocentro\r\n                            <img src={vetorIcon[0]} alt=\"\" />\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"escolha margem\">\r\n                        <h2 className=\"rowdies\">HORÁRIO</h2>\r\n                        <button onClick={mostrarComponenteHora} className=\"btn roboto bg-vermelhoClaro\">\r\n                            Escolha um Horário\r\n                            <img src={vetorIcon[0]} alt=\"\" />\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"ok\">\r\n                        <button className=\"btn roboto bg-vermelhoClaro\" onClick={agendar}>\r\n                            Agendar\r\n                            <img src={vetorIcon[0]} alt=\"\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\usuario\\historico\\Historico.tsx",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\usuario\\ranking\\Ranking.tsx",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\usuario\\perfil\\Perfil.tsx",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\inicio\\components\\Funciona.tsx",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\inicio\\components\\Doar.tsx",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\components\\imagens.tsx",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\inicio\\components\\Header.tsx",["327","328","329","330","331"],[],"import { vetorImg } from \"../../../shared/components/imagens\";\r\nimport { vetorIcon } from \"../../../shared/components/imagens\";\r\n\r\nexport const Header = () => {\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"imgMenu\">\r\n                <img className=\"imgOndaHeader\" src={vetorImg[9]} alt=\"\" />\r\n            </div>\r\n\r\n            <header className='header2'>\r\n                <img className=\"logo\" src={vetorImg[3]} alt=\"Logo Vitae\" />\r\n                <div className=\"menuPagina \">\r\n                    <a className=\"bold-20\" href=\"\">Como Doar</a>\r\n                    <a className=\"bold-20\" href=\"\">Como Funciona</a>\r\n                    <a className=\"bold-20\" href=\"\">Quem Somos</a>\r\n                    <a className=\"bold-20\" href=\"\">Perguntas Frequentes</a>\r\n                    <a className=\"bold-20\" href=\"\">Contato</a>\r\n                    <li className=\"bold-20\">|</li>\r\n                    <a className=\"bold-20\" href=\"/login\">Login</a>\r\n                    <a className=\"bold-20\" href=\"/cadastro-usuario\">Cadastre-se</a>\r\n                </div>\r\n\r\n                <div className=\"altCor\">\r\n                    <li className=\"roboto\">Escollha o seu tipo de</li>\r\n                    <li className=\"roboto\">Daltonismo</li>\r\n                    <button className=\"btn regular-16\">\r\n                        Opções Daltonismo\r\n                        <img src={vetorIcon[0]} alt=\"\" />\r\n                    </button>\r\n                </div>\r\n            </header>\r\n        </>\r\n    );\r\n}","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\inicio\\components\\Slogan.tsx",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\sevice\\api\\tarefas\\TarefasService.ts",["332","333"],[],"import { Api } from \"../ApiConfig\";\r\nimport { ApiException } from \"../ApiException\";\r\n\r\nexport interface IPrimeiroCadastro {\r\n    idUsuario: number;\r\n    nome: string;\r\n    email: string | null;\r\n    senha: string | null;\r\n    role: string;\r\n    cpf: string;\r\n}\r\n\r\nexport interface ISegundoCadastroEndereco {\r\n    cidade: string;\r\n    bairro: string;\r\n    cep: string;\r\n    logradouro: string;\r\n    rua: string;\r\n    numero: number;\r\n    fkUsuario: number;\r\n  }\r\n\r\nexport interface ISegundoCadastroCaracteristicas{\r\n    peso :string;\r\n    altura : string;\r\n    tatto: boolean;\r\n    sexo: string;\r\n    nascimento: string;\r\n    apto: boolean;\r\n    fkUsuario: number;\r\n}\r\n\r\nexport interface ILogin {\r\n    email: string;\r\n    senha: string;\r\n}\r\n\r\nexport interface ITokenId {\r\n    Id: string;\r\n    token: string;\r\n\r\n}\r\n\r\nexport interface IListagemHemocentro {\r\n    id: number;\r\n    nome: string;\r\n    cep: string;\r\n}\r\n\r\nexport interface IListagemDeHorarioDisponivel {\r\n    id: number;\r\n    hora: number;\r\n    hospital?: IListagemHemocentro[];\r\n}\r\n\r\nexport interface IAgendamento {\r\n    id: number;\r\n    pontos: number;\r\n    horaMarcada: IListagemDeHorarioDisponivel;\r\n    hospital: IListagemHemocentro;\r\n}\r\n\r\ntype THoraDisponivelComTotalCount = {\r\n    data: IListagemHemocentro[];\r\n}\r\n\r\ntype THemocentroComTotalCount = {\r\n    data: IListagemHemocentro[];\r\n}\r\n\r\nexport interface IHistoricoAgendamento {\r\n    id: number;\r\n    agenda: IAgendamento;\r\n}\r\n\r\ntype THistoricoAgendamento = {\r\n    data: IHistoricoAgendamento[];\r\n}\r\n\r\nconst getAll = async (): Promise<IPrimeiroCadastro[] | ApiException> => {\r\n    try {\r\n        const { data } = await Api().get('/swagger-ui.html');\r\n        return data;\r\n    }\r\n    catch (error: any) {\r\n        return new ApiException(error.message || 'Erro ao consultar Api.');\r\n    }\r\n\r\n};\r\n\r\nconst getAllHistoricoAgendamento = async (): Promise<THistoricoAgendamento | Error> => {\r\n    try {\r\n\r\n        const { data } = await Api().get('/');\r\n\r\n        if (data) {\r\n            return {\r\n                data\r\n            };\r\n        }\r\n\r\n        return new Error('Erro ao listar registros.');\r\n    } catch (error) {\r\n        console.error(error);\r\n        return new Error((error as { message: string }).message || 'Erro ao listar registros.');\r\n    }\r\n};\r\n\r\nconst getAllHoraDisponivel = async (): Promise<THoraDisponivelComTotalCount | Error> => {\r\n    try {\r\n\r\n        const { data } = await Api().get('/');\r\n\r\n        if (data) {\r\n            return {\r\n                data\r\n            };\r\n        }\r\n\r\n        return new Error('Erro ao listar registros.');\r\n    } catch (error) {\r\n        console.error(error);\r\n        return new Error((error as { message: string }).message || 'Erro ao listar registros.');\r\n    }\r\n};\r\n\r\nconst getAllHospital = async (filter = ''): Promise<THemocentroComTotalCount | Error> => {\r\n    try {\r\n        const urlRelativa = `/hemocentro?nomeCompleto_like=${filter}`;\r\n\r\n        const { data } = await Api().get(urlRelativa);\r\n\r\n        if (data) {\r\n            return {\r\n                data\r\n            };\r\n        }\r\n\r\n        return new Error('Erro ao listar registros.');\r\n    } catch (error) {\r\n        console.error(error);\r\n        return new Error((error as { message: string }).message || 'Erro ao listar registros.');\r\n    }\r\n};\r\n\r\n\r\n\r\nconst getById = async (id: number): Promise<IPrimeiroCadastro | ApiException> => {\r\n    try {\r\n        const { data } = await Api().get(`/tarefas/${id}`);\r\n        return data;\r\n    }\r\n    catch (error: any) {\r\n        return new ApiException(error.message || 'Erro ao consultar registro.');\r\n    }\r\n\r\n};\r\n\r\nconst postLogin = async (dataToUpdate: ILogin): Promise<ITokenId | ApiException> => {\r\n    try {\r\n        const { data } = await Api().post(`/auth/login`, dataToUpdate);\r\n        return data;\r\n    }\r\n    catch (error: any) {\r\n        return new ApiException(error.message || 'Erro ao realizar o login.');\r\n    }\r\n\r\n};\r\n\r\n\r\nconst getByIdHistoricoAgendamentoAtual = async (id: number): Promise<IHistoricoAgendamento | Error> => {\r\n    try {\r\n\r\n        const { data } = await Api().get('/');\r\n\r\n        return data;\r\n    }\r\n    catch (error) {\r\n        console.error(error);\r\n        return new Error((error as { message: string }).message || 'Erro ao listar registros.');\r\n    }\r\n};\r\n\r\n//Criar outro método para inserção de dados\r\nconst createUsuario = async (dataToCreate: Omit<IPrimeiroCadastro, 'idUsuario'>): Promise<IPrimeiroCadastro | ApiException> => {\r\n    try {\r\n        const { data } = await Api().post<any>('/usuario/register', dataToCreate);\r\n        console.log('Resposta do createUsuario:', data);\r\n        return data;\r\n    }\r\n    catch (error: any) {\r\n        return new ApiException(error.message || 'Erro ao criar registro.');\r\n    }\r\n\r\n};\r\n\r\nconst createUsuarioEndereco = async (dataToCreate: ISegundoCadastroEndereco, token: string): Promise<ISegundoCadastroEndereco | ApiException> => {\r\n    try {\r\n      const headers = {\r\n        'Authorization': `Bearer ${token}`\r\n      };\r\n      const { data } = await Api().post<any>('/Endereco', dataToCreate, { headers });\r\n      return data;\r\n    } catch (error: any) {\r\n      return new ApiException(error.message || 'Erro ao criar registro.');\r\n    }\r\n  };\r\n\r\nconst createUsuarioCaracteristicas = async (dataToCreate: ISegundoCadastroCaracteristicas, token: string): Promise<ISegundoCadastroCaracteristicas | ApiException> => {\r\n    try {\r\n\r\n        const headers = {\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n        const { data } = await Api().post<any>('/Caracteristicas', dataToCreate, { headers });\r\n        return data;\r\n    }\r\n    catch (error: any) {\r\n        return new ApiException(error.message || 'Erro ao criar registro.');\r\n    }\r\n\r\n};\r\n\r\n\r\nconst updateById = async (id: number, dataToUpdate: IPrimeiroCadastro): Promise<IPrimeiroCadastro | ApiException> => {\r\n    try {\r\n        const { data } = await Api().put(`/tarefas/${id}`, dataToUpdate);\r\n        return data;\r\n    }\r\n    catch (error: any) {\r\n        return new ApiException(error.message || 'Erro ao atualizar registro.');\r\n    }\r\n\r\n};\r\n\r\nconst deleteById = async (id: number): Promise<undefined | ApiException> => {\r\n    try {\r\n        await Api().delete(`/tarefas/${id}`);\r\n        return undefined;\r\n    }\r\n    catch (error: any) {\r\n        return new ApiException(error.message || 'Erro ao apagar registro.');\r\n    }\r\n\r\n};\r\n\r\nconst deleteByIdAgedamento = async (id: number): Promise<undefined | ApiException> => {\r\n    try {\r\n        await Api().delete(`/tarefas/${id}`);\r\n        return undefined;\r\n    }\r\n    catch (error: any) {\r\n        return new ApiException(error.message || 'Erro ao apagar registro.');\r\n    }\r\n\r\n};\r\n\r\nexport const TarefasService = {\r\n    getAll,\r\n    getAllHospital,\r\n    getById,\r\n    postLogin,\r\n    getByIdHistoricoAgendamentoAtual,\r\n    createUsuario,\r\n    createUsuarioEndereco,\r\n    createUsuarioCaracteristicas,\r\n    updateById,\r\n    deleteById,\r\n    deleteByIdAgedamento,\r\n};","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\usuario\\agenda\\components\\Horario.tsx",["334","335","336","337","338","339","340"],[],"import { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport '../../../../../html-css-template/css/HemocentroEHorario.css'\r\nimport { IListagemDeHorarioDisponivel, IListagemHemocentro } from '../../../../shared/sevice/api/tarefas/TarefasService';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\ninterface IHorarioProps {\r\n    onChange: () => void;\r\n}\r\n\r\nexport const Horario: React.FC<IHorarioProps> = ({ onChange }) => {\r\n    const [horario, setHorario] = useState<number>(0);\r\n\r\n    sessionStorage.setItem('hora', horario.toString());\r\n\r\n    const vetorHora = [\r\n        {\r\n            id: 1,\r\n            hora: 8.30\r\n        },\r\n        {\r\n            id: 2,\r\n            hora: 9.00\r\n        },\r\n        {\r\n            id: 3,\r\n            hora: 9.30\r\n        },\r\n        {\r\n            id: 4,\r\n            hora: 10.00\r\n        },\r\n        {\r\n            id: 5,\r\n            hora: 10.30\r\n        },\r\n        {\r\n            id: 6,\r\n            hora: 11.00\r\n        },\r\n        {\r\n            id: 7,\r\n            hora: 11.30\r\n        },\r\n        {\r\n            id: 8,\r\n            hora: 13.00\r\n        },\r\n        {\r\n            id: 9,\r\n            hora: 13.30\r\n        },\r\n        {\r\n            id: 10,\r\n            hora: 14.00\r\n        },\r\n        {\r\n            id: 11,\r\n            hora: 14.30\r\n        },\r\n        {\r\n            id: 12,\r\n            hora: 15.00\r\n        },\r\n    ];\r\n\r\n    const vetorExemplo = [\r\n        {\r\n            id: 1,\r\n            hora: 8.30,\r\n            hospital: [\r\n                {\r\n                    idHospital: 1,\r\n                    nome: 'Santa Cruz Azul',\r\n                    cep: '042444000'\r\n                },\r\n                {\r\n                    idHospital: 2,\r\n                    nome: 'São Luiz',\r\n                    cep: '042444001'\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: 2,\r\n            hora: 11.00,\r\n            hospital: {\r\n                idHospital: 2,\r\n                nome: 'São Luiz',\r\n                cep: '042444001'\r\n            }\r\n        },\r\n        {\r\n            id: 3,\r\n            hora: 9.30,\r\n            hospital: {\r\n                idHospital: 3,\r\n                nome: 'São Camilo',\r\n                cep: '042444002'\r\n            }\r\n        },\r\n        {\r\n            id: 4,\r\n            hora: 13.00,\r\n            hospital: {\r\n                idHospital: 4,\r\n                nome: 'São Camilo',\r\n                cep: '042444002'\r\n            }\r\n        },\r\n        {\r\n            id: 5, hora: 14.30,\r\n            hospital: {\r\n                idHospital: 5,\r\n                nome: 'São Camilo',\r\n                cep: '042444002'\r\n            }\r\n        }\r\n    ];\r\n\r\n    const horarioIndisponivel = (hora: number) => {\r\n        {/* Método find retornará o primeiro item em que a condição retorne verdadeira */ }\r\n        const horarioDisponivel = vetorExemplo.find((item) => item.hora === hora);\r\n\r\n        if (horarioDisponivel) {\r\n            return '(Indisponível)';\r\n        } else {\r\n            return '(Disponível)';\r\n        }\r\n    };\r\n\r\n    const showChosenTime = (message: string) => {\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: \"top-end\",\r\n            showConfirmButton: false,\r\n            timer: 5000,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.onmouseenter = Swal.stopTimer;\r\n                toast.onmouseleave = Swal.resumeTimer;\r\n            }\r\n        });\r\n    \r\n        Toast.fire({\r\n            icon: \"info\",\r\n            title: message\r\n        });\r\n    };\r\n\r\n    const showChosenWrongTime = (message: string) => {\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: \"top-end\",\r\n            showConfirmButton: false,\r\n            timer: 5000,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.onmouseenter = Swal.stopTimer;\r\n                toast.onmouseleave = Swal.resumeTimer;\r\n            }\r\n        });\r\n    \r\n        Toast.fire({\r\n            icon: \"error\",\r\n            title: message\r\n        });\r\n    };\r\n\r\n    const horaEscolhida = useCallback((hora: number) => {\r\n        if (horarioIndisponivel(hora) === '(Disponível)') {\r\n            setHorario(hora);\r\n            showChosenTime(\"Agora, finalize selecionando o botão de agendar.\");\r\n        }\r\n        else {\r\n            showChosenWrongTime(\"Horário indisponível, selecione outro.\");\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"caixaHemo\">\r\n                <div className=\"formularioAgenda\">\r\n                    <div className=\"headerHomo\">\r\n                        <h1 className=\"rowdies\">HORÁRIO</h1>\r\n                        <button className=\"btnFechar bg-azulClaro\" onClick={onChange}>\r\n                            <p className=\"roboto sbold-24\">x</p>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"divisor\">\r\n                        <span className='linhaDivisoria'></span>\r\n                    </div>\r\n                    <div className=\"historicoHorario\">\r\n                        {vetorHora.map((vetor) => {\r\n                            return <div className=\"caixaHora\" key={vetor.id}>\r\n                                <h3 onClick={() => horaEscolhida(vetor.hora)} className=\"hora roboto regular-20\">\r\n                                    <p>{vetor.hora}h</p>\r\n                                    <p>{horarioIndisponivel(vetor.hora)}</p>\r\n                                </h3>\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\usuario\\historico\\components\\ProximaDoacao.tsx",["341","342","343","344","345"],[],"import { useCallback, useEffect, useState } from \"react\";\r\nimport { IHistoricoAgendamento, TarefasService } from \"../../../../shared/sevice/api/tarefas/TarefasService\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { ApiException } from \"../../../../shared/sevice/api/ApiException\";\r\nimport { de } from \"date-fns/locale\";\r\n\r\nexport const ProximaDoacao = () => {\r\n    const [agenda, setAgenda] = useState<IHistoricoAgendamento>();\r\n\r\n    const [data, setData] = useState<number>();\r\n    const [hora, setHora] = useState<number>();\r\n    const [hemocentro, setHemocentro] = useState<string>();\r\n    const [local, setLocal] = useState<string>();\r\n    const [cep, setCep] = useState<string>();\r\n\r\n    const navegando = useNavigate();\r\n\r\n    const vetorExemplo = [\r\n        {\r\n            usuario: {\r\n                idUsuario: 1,\r\n                agenda: {\r\n                    id: 2,\r\n                    pontos: 5,\r\n                    horaMarcada: {\r\n                        idHora: 3,\r\n                        hora: 9.30,\r\n                    },\r\n                    hospital: {\r\n                        idHospital: 4,\r\n                        nome: 'São Camilo',\r\n                        cep: '042444002'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        {\r\n            usuario: {\r\n                idUsuario: 2,\r\n                agenda: {\r\n                    id: 1,\r\n                    pontos: 5,\r\n                    horaMarcada: {\r\n                        idHora: 4,\r\n                        hora: 10.00,\r\n                    },\r\n                    hospital: {\r\n                        idHospital: 1,\r\n                        nome: 'Santa Cruz Azul',\r\n                        cep: '042444000'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        {/*TarefasService.getByIdHistoricoAgendamentoAtual(vetorExemplo[0].usuario.idUsuario);*/ }\r\n\r\n        setAgenda({\r\n            id: vetorExemplo[0].usuario.idUsuario,\r\n            agenda: {\r\n                id: 0,\r\n                pontos: 0,\r\n                horaMarcada: {\r\n                    id: vetorExemplo[0].usuario.agenda.horaMarcada.idHora,\r\n                    hora: vetorExemplo[0].usuario.agenda.horaMarcada.hora,\r\n                },\r\n                hospital: {\r\n                    id: vetorExemplo[0].usuario.agenda.hospital.idHospital,\r\n                    nome: vetorExemplo[0].usuario.agenda.hospital.nome,\r\n                    cep: vetorExemplo[0].usuario.agenda.hospital.cep\r\n                },\r\n            }\r\n        });\r\n\r\n        setData(0);\r\n        setHora(agenda?.agenda.horaMarcada.hora);\r\n        setHemocentro(agenda?.agenda.hospital.nome);\r\n        setLocal(agenda?.agenda.hospital.cep);\r\n        setCep(agenda?.agenda.hospital.cep);\r\n\r\n    }, []);\r\n\r\n    const showConfirmUpdate = (message: string) => {\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: \"top-end\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.onmouseenter = Swal.stopTimer;\r\n                toast.onmouseleave = Swal.resumeTimer;\r\n            }\r\n        });\r\n\r\n        Toast.fire({\r\n            icon: \"info\",\r\n            title: message\r\n        });\r\n    };\r\n\r\n    const showDelete = (message: string) => {\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: \"top-end\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.onmouseenter = Swal.stopTimer;\r\n                toast.onmouseleave = Swal.resumeTimer;\r\n            }\r\n        });\r\n\r\n        Toast.fire({\r\n            icon: \"success\",\r\n            title: message\r\n        });\r\n    };\r\n\r\n    const showErrorNetwork = (message: string) => {\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: \"top-end\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.onmouseenter = Swal.stopTimer;\r\n                toast.onmouseleave = Swal.resumeTimer;\r\n            }\r\n        });\r\n\r\n        Toast.fire({\r\n            icon: \"error\",\r\n            title: message\r\n        });\r\n    };\r\n\r\n    const deletarAgendamento = useCallback((id: number) => {\r\n        TarefasService.deleteByIdAgedamento(id)\r\n            .then((result) => {\r\n                if (result instanceof ApiException) {\r\n                    showErrorNetwork(result.message + \", aguarde.\");\r\n                }\r\n                else {\r\n                    showDelete(\"Agendamento anterior apagado.\");\r\n                }\r\n            }\r\n            );\r\n    }, []);\r\n\r\n    const alterarAgendamento = useCallback(async (id: number) => {\r\n        deletarAgendamento(id);\r\n        showConfirmUpdate(\"Alternando para página de Agenamento, escolha um novo dia, hemocentro e horário para doar.\");\r\n        await new Promise(resolve => setTimeout(resolve, 3000));\r\n        navegando(\"/perfil-usuario/agendamento\");\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"proximaDoacao\">\r\n                <h2 className='rowdies'>PRÓXIMA DOAÇÃO</h2>\r\n                <div className=\"doacao\">\r\n                    <div className=\"doacaoAtual bg-vermelhoClaro\">\r\n                        <div className=\"item\">\r\n                            <h2 className='roboto'>Pts: 000</h2>\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <h2 className='roboto'>Data: {data}</h2>\r\n                            <h2 className='roboto'>Hora: {hora}</h2>\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <h2 className='roboto'>Hemocentro: {hemocentro}</h2>\r\n                            <h2 className='roboto'>Local: {local}</h2>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"botaoDoacao\">\r\n                        <button onClick={() => alterarAgendamento(vetorExemplo[0].usuario.idUsuario)} className='btn bg-azulClaro roboto'>Alterar Agendamento</button>\r\n                        <button onClick={() => deletarAgendamento(vetorExemplo[0].usuario.idUsuario)} className='btn bg-azulClaro roboto'>Cancelar Agendamento</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\usuario\\historico\\components\\HistoricoDoacao.tsx",["346"],[],"import { useEffect, useState } from \"react\";\r\nimport { IHistoricoAgendamento } from \"../../../../shared/sevice/api/tarefas/TarefasService\";\r\n\r\nexport const HistoricoDoacao: React.FC = () => {\r\n    const [historico, setHistorico] = useState<IHistoricoAgendamento[]>([]);\r\n\r\n    const vetorExemplo = [\r\n        {\r\n            usuario: {\r\n                id: 1,\r\n                agenda: {\r\n                    id: 2,\r\n                    pontos: 5,\r\n                    horaMarcada: {\r\n                        id: 3,\r\n                        hora: 9.30,\r\n                    },\r\n                    hospital: {\r\n                        id: 4,\r\n                        nome: 'São Camilo',\r\n                        cep: '042444002'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        {\r\n            usuario: {\r\n                id: 2,\r\n                agenda: {\r\n                    id: 1,\r\n                    pontos: 5,\r\n                    horaMarcada: {\r\n                        id: 4,\r\n                        hora: 10.00,\r\n                    },\r\n                    hospital: {\r\n                        id: 1,\r\n                        nome: 'Santa Cruz Azul',\r\n                        cep: '042444000'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n    ];\r\n\r\n    useEffect(() => {\r\n\r\n        const rows = vetorExemplo.map((result) => ({\r\n            id: result.usuario.id,\r\n            agenda: {\r\n                id: result.usuario.agenda.id,\r\n                pontos: result.usuario.agenda.pontos,\r\n                horaMarcada: {\r\n                    id: result.usuario.agenda.horaMarcada.id,\r\n                    hora: result.usuario.agenda.horaMarcada.hora,\r\n                },\r\n                hospital: {\r\n                    id: result.usuario.agenda.hospital.id,\r\n                    nome: result.usuario.agenda.hospital.nome,\r\n                    cep: result.usuario.agenda.hospital.cep\r\n                },\r\n            }\r\n        }));\r\n\r\n        setHistorico(rows);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"doacaoAnterior\">\r\n                <h2 className='rowdies'>HISTÓRICO</h2>\r\n                {historico.map((historico) => {\r\n                return <div className=\"doacao\" key={historico.agenda.id}>\r\n                     <div className=\"doacaoAtual bg-vermelhoClaro\">\r\n                        <div className=\"item\">\r\n                            <h2 className='roboto'>Doação n°: {historico.agenda.id}</h2>\r\n                            <h2 className='roboto'>Pts: {historico.agenda.pontos}</h2>\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <h2 className='roboto'>Data: {historico.agenda.horaMarcada.id}</h2>\r\n                            <h2 className='roboto'>Hora: {historico.agenda.horaMarcada.hora}</h2>\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <h2 className='roboto'>Hemocentro: {historico.agenda.hospital.nome}</h2>\r\n                            <h2 className='roboto'>Local: {historico.agenda.hospital.cep}</h2>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"caixaLitros\">\r\n                        <div className=\"litros\">\r\n                            <h3 className='roboto'>Litros Doados</h3>\r\n                            <h2 className='roboto'>3.5</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                })}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\components\\index.tsx",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\usuario\\agenda\\components\\Agenda.tsx",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\usuario\\agenda\\components\\Hemocentro.tsx",["347","348","349"],[],"import { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { InputPesquisa } from '../../../../shared/components';\r\nimport { IListagemHemocentro, TarefasService } from '../../../../shared/sevice/api/tarefas/TarefasService';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\n\r\nimport '../../../../../html-css-template/css/HemocentroEHorario.css';\r\nimport Swal from 'sweetalert2';\r\n\r\ninterface IHemocentroProps {\r\n    onChange: () => void;\r\n}\r\n\r\nexport const Hemocentro: React.FC<IHemocentroProps> = ({ onChange }) => {\r\n    const [pesquisa, setPesquisa] = useSearchParams();\r\n    const [rows, setRows] = useState<IListagemHemocentro[]>([]);\r\n\r\n    const history = useNavigate();\r\n\r\n\r\n    const showChosenHemocentro = (message: string) => {\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: \"top-end\",\r\n            showConfirmButton: false,\r\n            timer: 5000,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.onmouseenter = Swal.stopTimer;\r\n                toast.onmouseleave = Swal.resumeTimer;\r\n            }\r\n        });\r\n\r\n        Toast.fire({\r\n            icon: \"info\",\r\n            title: message\r\n        });\r\n    };\r\n\r\n    const vetorExemplo = [\r\n        { id: 1, nome: 'Santa Cruz Azul', cep: '042444000' },\r\n        { id: 2, nome: 'São Luiz', cep: '042444001' },\r\n        { id: 3, nome: 'São Camilo', cep: '042444002' },\r\n        { id: 4, nome: 'São Camilo', cep: '042444002' },\r\n        { id: 5, nome: 'São Camilo', cep: '042444002' }\r\n    ]\r\n\r\n    const busca = useMemo(() => {\r\n        return pesquisa.get('busca') || '';\r\n    }, [pesquisa]);\r\n\r\n    const hemocentroEscolhido = useCallback((id: number) => {\r\n        if (id !== null && id !== undefined) {\r\n            showChosenHemocentro(\"Hemocentro definido, agora defina um horário.\")\r\n            sessionStorage.setItem('hemocentro', id.toString());\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        {/*TarefasService.getAllHospital(pesquisa)\r\n        .then((result) => {\r\n\r\n            if (result instanceof Error) {\r\n                alert(result.message);\r\n            } else {\r\n                console.log(result);\r\n\r\n                setRows(result.data);\r\n            }\r\n        });*/}\r\n\r\n        const resultadosFiltrados = vetorExemplo.filter((item) =>\r\n            item.nome.toLowerCase().includes(busca.toLowerCase())\r\n        );\r\n        setRows(resultadosFiltrados);\r\n    }, [pesquisa, setPesquisa]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"caixaHemo\">\r\n                <div className=\"formularioAgenda\">\r\n                    <div className=\"headerHomo\">\r\n                        <h1 className=\"rowdies\">HEMOCENTRO</h1>\r\n                        <button className=\"btnFechar bg-azulClaro\" onClick={onChange}>\r\n                            <p className=\"roboto sbold-24\">x</p>\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"caixaPesquisa\">\r\n                        <InputPesquisa\r\n                            className={\"inputPesquisar\"}\r\n                            placeholder={\"Pesquisar...\"}\r\n                            aoMudarTextoDeBusca={(texto) => {\r\n                                setPesquisa({ busca: texto }, { replace: true });\r\n                                history(`?busca=${texto}`);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"historicoAgenda\">\r\n                        {rows.map((vetor) => {\r\n                            return <h3 onClick={() => hemocentroEscolhido(vetor.id)} className=\"hemo roboto regular-20\" key={vetor.id}>\r\n                                <p>Hemocentro: {vetor.nome}</p>\r\n                                <p>CEP: {vetor.cep}</p>\r\n                            </h3>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\inicio\\components\\index.tsx",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\contexts\\index.tsx",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\sevice\\api\\ApiConfig.ts",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\sevice\\api\\ApiException.ts",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\inicio\\components\\Somos.tsx",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\inicio\\components\\Perguntas.tsx",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\inicio\\components\\FacaParte.tsx",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\components\\menu\\MenuPerfilFuncionario.tsx",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\components\\menu\\MenuPerfilUsuario.tsx",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\components\\input-pesquisa\\InputPesquisa.tsx",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\components\\input\\Input.tsx",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\components\\onda-lateral\\OndaLateral.tsx",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\contexts\\Anexo.ts",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\contexts\\UsuarioLogado.tsx",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\pages\\cadastro\\CadastroEmpresaDados.tsx",["350","351"],[],"import \"../../../html-css-template/css/Cadastro.css\";\r\nimport \"../../../html-css-template/css/geral.css\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { vetorImg } from \"../../shared/components/imagens\";\r\nimport { vetorIcon } from \"../../shared/components/imagens\";\r\n\r\nimport { useCallback, useRef, useState } from \"react\";\r\nimport { Input } from \"../../shared/components\";\r\nimport Swal from \"sweetalert2\";\r\nimport { CadastroEmpresaService, ICadastroEmpresa } from \"../../shared/sevice/api/tarefas/cadastros/CadastroEmpresaService\";\r\n\r\nexport const CadastroEmpresaDados = () => {\r\n\r\n  const [nome, setNome] = useState(\"\");\r\n  const [cnpj, setCnpj] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [senha, setSenha] = useState(\"\");\r\n  const [confSenha, setConfSenha] = useState(\"\");\r\n\r\n  const navegando = useNavigate();\r\n  const inputPasswordRef = useRef<HTMLInputElement>(null);\r\n\r\n  const showValidationErrorModal = (message: string) => {\r\n    const Toast = Swal.mixin({\r\n      toast: true,\r\n      position: \"top-end\",\r\n      showConfirmButton: false,\r\n      timer: 5000,\r\n      timerProgressBar: true,\r\n      didOpen: (toast) => {\r\n        toast.onmouseenter = Swal.stopTimer;\r\n        toast.onmouseleave = Swal.resumeTimer;\r\n      },\r\n    });\r\n\r\n    Toast.fire({\r\n      icon: \"error\",\r\n      title: message,\r\n    });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    \r\n    if (email === \"\" || senha === \"\" || confSenha === \"\" || nome === \"\" || cnpj === \"\") {\r\n      showValidationErrorModal(\"Os Campos não pode estar em branco\");\r\n      return false;\r\n    } \r\n    \r\n    else if (!email.includes(\"@\")) {\r\n      showValidationErrorModal(\"Email deve conter @\");\r\n      return false;\r\n    } \r\n    \r\n    else if (\r\n      !email.includes(\"outlook.com\") &&\r\n      !email.includes(\"hotmail.com\") &&\r\n      !email.includes(\"gmail.com\") &&\r\n      !email.includes(\"yahoo.com\") &&\r\n      !email.includes(\"icloud.com\")\r\n    ) {\r\n      showValidationErrorModal(\"Insira um dominio valido\");\r\n      return false;\r\n    }\r\n\r\n    else if (senha.length < 8) {\r\n      showValidationErrorModal(\"Digite uma senha forte\");\r\n      return false;\r\n    } \r\n\r\n    else if (cnpj.length !== 14) {\r\n      showValidationErrorModal(\"CNPJ inválido\");\r\n    } \r\n\r\n    else if (/[^a-zA-Z0-9\\s]/.test(nome)) {\r\n      showValidationErrorModal(\"Nome não pode conter caracteres especiais\");\r\n    }\r\n    \r\n    else if (confSenha === senha) {\r\n      navegando(\"/cadastro-empresa\");\r\n      return true;\r\n    }\r\n\r\n    else {\r\n        showValidationErrorModal(\r\n            \"Senhas diferentes\");\r\n            return false;\r\n    }\r\n\r\n  };\r\n\r\n  const handleCadastroEmpresa = useCallback(async () => {\r\n    try {\r\n      if (validateForm()) {\r\n        const cadatroHospitalData: ICadastroEmpresa = {\r\n          cnpj: cnpj,\r\n          email: email,\r\n          nome: nome,\r\n          senha: senha,\r\n      };\r\n\r\n      const resultado = CadastroEmpresaService.create(cadatroHospitalData);\r\n\r\n    }\r\n    } catch (error) {\r\n      console.error(\"Erro ao cadastrar empresa:\", error);\r\n    }\r\n  }, [nome, email, senha, cnpj, validateForm]);\r\n\r\n\r\n  const handleClickNav = () => {\r\n    navegando(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"img\">\r\n        <img className=\"onda1\" src={vetorImg[4]} alt=\"\" />\r\n        <img className=\"imgDoe\" src={vetorImg[1]} alt=\"\" />\r\n      </div>\r\n\r\n      <header className=\"header1\">\r\n        <div className=\"componente1\">\r\n          <img src={vetorImg[3]} alt=\"Vitae\" />\r\n          <a className=\"roboto bold-20\" href=\"/pagina-inicial\">\r\n            Home\r\n          </a>\r\n        </div>\r\n\r\n        <div className=\"nextPage\">\r\n          <div>\r\n            <h3>Já tem conta ?</h3>\r\n            <h3>Então vamos logar!</h3>\r\n          </div>\r\n\r\n          <button onClick={handleClickNav} className=\"btn logar bold-20\">\r\n            Logar\r\n            <img src={vetorIcon[0]} alt=\"\" />\r\n          </button>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"container1\">\r\n        <div className=\"formulario1\">\r\n          <div className=\"cadastro\">\r\n            <h1>Cadastre-se</h1>\r\n            <h1 className=\"text-title\">Bem vindo!!</h1>\r\n            <h1 className=\"text-title\">\r\n              Cadastre as informações do Hemocentro\r\n            </h1>\r\n          </div>\r\n          <div className=\"inputs\">\r\n          <Input\r\n              className={\"input-size\"}\r\n              placeholder={\"Nome\"}\r\n              value={nome}\r\n              onChange={(newValue) => setNome(newValue)}\r\n              onPressEnter={() => inputPasswordRef.current?.focus()}\r\n            />\r\n            <Input\r\n              className={\"input-size\"}\r\n              placeholder={\"CNPJ\"}\r\n              type=\"number\"\r\n              value={cnpj}\r\n              onChange={(newValue) => setCnpj(newValue)}\r\n              onPressEnter={() => inputPasswordRef.current?.focus()}\r\n            />\r\n            <Input\r\n              className={\"input-size\"}\r\n              placeholder={\"Email\"}\r\n              value={email}\r\n              onChange={(newValue) => setEmail(newValue)}\r\n              onPressEnter={() => inputPasswordRef.current?.focus()}\r\n            />\r\n            <Input\r\n              className={\"input-size\"}\r\n              placeholder={\"Senha\"}\r\n              type=\"password\"\r\n              value={senha}\r\n              ref={inputPasswordRef}\r\n              onChange={(newValue) => setSenha(newValue)}\r\n              onPressEnter={() => inputPasswordRef.current?.focus()}\r\n            />\r\n            <Input\r\n              className={\"input-size\"}\r\n              placeholder={\"Confirmar senha\"}\r\n              type=\"password\"\r\n              value={confSenha}\r\n              ref={inputPasswordRef}\r\n              onChange={(newValue) => setConfSenha(newValue)}\r\n            />\r\n          </div>\r\n          <div className=\"button\">\r\n            <button onClick={handleCadastroEmpresa} className=\"btn cadastrar bold-20\">\r\n              Avançar\r\n              <img src={vetorIcon[0]} alt=\"\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\sevice\\api\\tarefas\\quizService.ts",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\sevice\\api\\tarefas\\cadastros\\CadastroEmpresaService.ts",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\sevice\\api\\tarefas\\cadastros\\CadastroEmpresaEnderecoService.ts",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\sevice\\api\\tarefas\\cadastros\\CadastroFuncionarioService.ts",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\app\\shared\\sevice\\api\\tarefas\\cadastros\\CadastroDoacaoService.ts",[],[],"C:\\Users\\Willian\\OneDrive\\Documents\\3-Semestre\\vitae\\Front-end\\site\\src\\js\\maps.js",["352","353","354"],[],"\r\n//let map;\r\nlet vetores = [{ lat: -23.537748, lng: -46.461309 }, { lat: -23.536509, lng: -46.461819 }, { lat: -23.52900, lng: -46.402500 }, { lat: -23.529800, lng: -46.402600 }]\r\nlet longitude = null;\r\nlet latitude = null\r\n//function recuperaEndereco(){\r\n//  const cep = document.getElementById(\"cep\").value;\r\n//  \r\n//    fetch(`https://viacep.com.br/ws/${cep}/json/`,{\r\n//      method: \"GET\",\r\n//      mode: \"cors\"\r\n//    }).then(function (resposta) {\r\n//      console.log(\"ESTOU NO THEN DO entrar()!\")\r\n//      console.log(resposta)\r\n//          resposta.json().then(json => {\r\n//            \r\n//             recuperaLagLog(json.logradouro)\r\n//          });\r\n//  }).catch(function (erro) {\r\n//      console.log(erro);\r\n//  })\r\n//\r\n//}\r\n//function recuperaLagLog() {\r\n//  const cep = document.getElementById(\"cep\").value;\r\n//\r\n//  fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${cep}&key=AIzaSyB-b9znqlJ4a9CNUI-QoaqpXczDscalBc8`, {\r\n//    method: \"POST\",\r\n//    mode: \"cors\"\r\n//  }).then(function (resposta) {\r\n//    console.log(\"ESTOU NO THEN DO entrar()!\")\r\n//    console.log(resposta)\r\n//    resposta.json().then(json => {\r\n//      console.log(json)\r\n//      latitude = json.results[0].geometry.location.lat;\r\n//      longitude = json.results[0].geometry.location.lng;\r\n//      initMap()\r\n//      return json;\r\n//    });\r\n//  }).catch(function (erro) {\r\n//    console.log(erro);\r\n//  })\r\n//\r\n//}\r\n//\r\n//\r\n//async function initMap() {\r\n//  (g => { var h, a, k, p = \"The Google Maps JavaScript API\", c = \"google\", l = \"importLibrary\", q = \"__ib__\", m = document, b = window; b = b[c] || (b[c] = {}); var d = b.maps || (b.maps = {}), r = new Set, e = new URLSearchParams, u = () => h || (h = new Promise(async (f, n) => { await (a = m.createElement(\"script\")); e.set(\"libraries\", [...r] + \"\"); for (k in g) e.set(k.replace(/[A-Z]/g, t => \"_\" + t[0].toLowerCase()), g[k]); e.set(\"callback\", c + \".maps.\" + q); a.src = `https://maps.${c}apis.com/maps/api/js?` + e; d[q] = f; a.onerror = () => h = n(Error(p + \" could not load.\")); a.nonce = m.querySelector(\"script[nonce]\")?.nonce || \"\"; m.head.append(a) })); d[l] ? console.warn(p + \" only loads once. Ignoring:\", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n)) })({\r\n//    key: \"AIzaSyB-b9znqlJ4a9CNUI-QoaqpXczDscalBc8\",\r\n//    // Add other bootstrap parameters as needed, using camel case.\r\n//    // Use the 'v' parameter to indicate the version to load (alpha, beta, weekly, etc.)\r\n//  });\r\n//\r\n//\r\n//  //@ts-ignore\r\n//  const { Map } = await google.maps.importLibrary(\"maps\");\r\n//  if (latitude == null || longitude == null) {\r\n//    map = new Map(document.getElementById(\"map\"), {\r\n//\r\n//      center: { lat: -23.537453, lng: -46.462382 },\r\n//      zoom: 20,\r\n//    });\r\n//  } else {\r\n//\r\n//    console.log(latitude);\r\n//    map = new Map(document.getElementById(\"map\"), {\r\n//\r\n//      center: { lat: latitude, lng: longitude },\r\n//      zoom: 20,\r\n//    });\r\n//  }\r\n//\r\n//\r\n//  for (let i = 0; i < vetores.length; i++) {\r\n//    let marcador = new google.maps.Marker({\r\n//      position: vetores[i],\r\n//      map,\r\n//      title: \"Hello World!\"\r\n//\r\n//    });\r\n//    marcador.addListener('click', function () {\r\n//      // Redirecione para o link desejado quando o marcador for clicado\r\n//      window.location.href = 'https://www.youtube.com/results?search_query=usando+maps+tomtom';\r\n//    });\r\n//    marcador.setMap(map);\r\n//  }\r\n//\r\n//\r\n//  console.log(map)\r\n//}\r\n\r\n\r\n\r\n// https://maps.googleapis.com/maps/api/geocode/json?address=08441+520&key=AIzaSyB-b9znqlJ4a9CNUI-QoaqpXczDscalBc8",["355"],{"ruleId":"356","severity":1,"message":"357","line":5,"column":10,"nodeType":"358","messageId":"359","endLine":5,"endColumn":19},{"ruleId":"360","replacedBy":"361"},{"ruleId":"356","severity":1,"message":"362","line":1,"column":10,"nodeType":"358","messageId":"359","endLine":1,"endColumn":21},{"ruleId":"356","severity":1,"message":"363","line":24,"column":10,"nodeType":"358","messageId":"359","endLine":24,"endColumn":14},{"ruleId":"356","severity":1,"message":"364","line":25,"column":10,"nodeType":"358","messageId":"359","endLine":25,"endColumn":14},{"ruleId":"356","severity":1,"message":"365","line":26,"column":10,"nodeType":"358","messageId":"359","endLine":26,"endColumn":13},{"ruleId":"356","severity":1,"message":"366","line":27,"column":10,"nodeType":"358","messageId":"359","endLine":27,"endColumn":16},{"ruleId":"356","severity":1,"message":"367","line":28,"column":10,"nodeType":"358","messageId":"359","endLine":28,"endColumn":15},{"ruleId":"368","severity":1,"message":"369","line":91,"column":11,"nodeType":"370","endLine":121,"endColumn":6},{"ruleId":"371","severity":1,"message":"372","line":98,"column":29,"nodeType":"373","messageId":"374","endLine":98,"endColumn":31},{"ruleId":"356","severity":1,"message":"375","line":131,"column":17,"nodeType":"358","messageId":"359","endLine":131,"endColumn":26},{"ruleId":"376","severity":1,"message":"377","line":156,"column":26,"nodeType":"378","messageId":"379","endLine":156,"endColumn":66},{"ruleId":"376","severity":1,"message":"377","line":164,"column":26,"nodeType":"378","messageId":"379","endLine":164,"endColumn":67},{"ruleId":"376","severity":1,"message":"377","line":175,"column":26,"nodeType":"378","messageId":"379","endLine":175,"endColumn":71},{"ruleId":"356","severity":1,"message":"380","line":10,"column":10,"nodeType":"358","messageId":"359","endLine":10,"endColumn":12},{"ruleId":"356","severity":1,"message":"381","line":38,"column":10,"nodeType":"358","messageId":"359","endLine":38,"endColumn":13},{"ruleId":"356","severity":1,"message":"382","line":38,"column":15,"nodeType":"358","messageId":"359","endLine":38,"endColumn":21},{"ruleId":"368","severity":1,"message":"383","line":237,"column":6,"nodeType":"384","endLine":237,"endColumn":50,"suggestions":"385"},{"ruleId":"368","severity":1,"message":"386","line":43,"column":11,"nodeType":"370","endLine":74,"endColumn":6},{"ruleId":"356","severity":1,"message":"375","line":89,"column":17,"nodeType":"358","messageId":"359","endLine":89,"endColumn":26},{"ruleId":"356","severity":1,"message":"387","line":4,"column":8,"nodeType":"358","messageId":"359","endLine":4,"endColumn":24},{"ruleId":"356","severity":1,"message":"388","line":3,"column":10,"nodeType":"358","messageId":"359","endLine":3,"endColumn":19},{"ruleId":"356","severity":1,"message":"388","line":4,"column":10,"nodeType":"358","messageId":"359","endLine":4,"endColumn":19},{"ruleId":"356","severity":1,"message":"387","line":12,"column":8,"nodeType":"358","messageId":"359","endLine":12,"endColumn":24},{"ruleId":"368","severity":1,"message":"389","line":48,"column":9,"nodeType":"370","endLine":110,"endColumn":4},{"ruleId":"390","severity":1,"message":"391","line":154,"column":13,"nodeType":"392","endLine":154,"endColumn":56},{"ruleId":"390","severity":1,"message":"391","line":157,"column":13,"nodeType":"392","endLine":157,"endColumn":57},{"ruleId":"390","severity":1,"message":"391","line":160,"column":13,"nodeType":"392","endLine":160,"endColumn":57},{"ruleId":"356","severity":1,"message":"393","line":3,"column":10,"nodeType":"358","messageId":"359","endLine":3,"endColumn":31},{"ruleId":"356","severity":1,"message":"394","line":1,"column":39,"nodeType":"358","messageId":"359","endLine":1,"endColumn":45},{"ruleId":"368","severity":1,"message":"395","line":108,"column":8,"nodeType":"384","endLine":108,"endColumn":10,"suggestions":"396"},{"ruleId":"390","severity":1,"message":"391","line":16,"column":21,"nodeType":"392","endLine":16,"endColumn":52},{"ruleId":"390","severity":1,"message":"391","line":17,"column":21,"nodeType":"392","endLine":17,"endColumn":52},{"ruleId":"390","severity":1,"message":"391","line":18,"column":21,"nodeType":"392","endLine":18,"endColumn":52},{"ruleId":"390","severity":1,"message":"391","line":19,"column":21,"nodeType":"392","endLine":19,"endColumn":52},{"ruleId":"390","severity":1,"message":"391","line":20,"column":21,"nodeType":"392","endLine":20,"endColumn":52},{"ruleId":"356","severity":1,"message":"397","line":91,"column":7,"nodeType":"358","messageId":"359","endLine":91,"endColumn":33},{"ruleId":"356","severity":1,"message":"398","line":109,"column":7,"nodeType":"358","messageId":"359","endLine":109,"endColumn":27},{"ruleId":"356","severity":1,"message":"362","line":1,"column":10,"nodeType":"358","messageId":"359","endLine":1,"endColumn":21},{"ruleId":"356","severity":1,"message":"399","line":1,"column":23,"nodeType":"358","messageId":"359","endLine":1,"endColumn":38},{"ruleId":"356","severity":1,"message":"400","line":3,"column":10,"nodeType":"358","messageId":"359","endLine":3,"endColumn":38},{"ruleId":"356","severity":1,"message":"401","line":3,"column":40,"nodeType":"358","messageId":"359","endLine":3,"endColumn":59},{"ruleId":"356","severity":1,"message":"402","line":4,"column":23,"nodeType":"358","messageId":"359","endLine":4,"endColumn":32},{"ruleId":"403","severity":1,"message":"404","line":122,"column":9,"nodeType":"405","messageId":"406","endLine":122,"endColumn":92},{"ruleId":"368","severity":1,"message":"407","line":178,"column":8,"nodeType":"384","endLine":178,"endColumn":10,"suggestions":"408"},{"ruleId":"356","severity":1,"message":"409","line":6,"column":10,"nodeType":"358","messageId":"359","endLine":6,"endColumn":12},{"ruleId":"356","severity":1,"message":"365","line":15,"column":12,"nodeType":"358","messageId":"359","endLine":15,"endColumn":15},{"ruleId":"403","severity":1,"message":"404","line":59,"column":9,"nodeType":"405","messageId":"406","endLine":59,"endColumn":99},{"ruleId":"368","severity":1,"message":"410","line":84,"column":8,"nodeType":"384","endLine":84,"endColumn":10,"suggestions":"411"},{"ruleId":"368","severity":1,"message":"412","line":161,"column":8,"nodeType":"384","endLine":161,"endColumn":10,"suggestions":"413"},{"ruleId":"368","severity":1,"message":"414","line":66,"column":8,"nodeType":"384","endLine":66,"endColumn":10,"suggestions":"415"},{"ruleId":"356","severity":1,"message":"416","line":3,"column":31,"nodeType":"358","messageId":"359","endLine":3,"endColumn":45},{"ruleId":"403","severity":1,"message":"404","line":59,"column":9,"nodeType":"405","messageId":"406","endLine":69,"endColumn":15},{"ruleId":"368","severity":1,"message":"417","line":75,"column":8,"nodeType":"384","endLine":75,"endColumn":31,"suggestions":"418"},{"ruleId":"368","severity":1,"message":"419","line":43,"column":9,"nodeType":"370","endLine":90,"endColumn":4},{"ruleId":"356","severity":1,"message":"375","line":102,"column":13,"nodeType":"358","messageId":"359","endLine":102,"endColumn":22},{"ruleId":"420","severity":1,"message":"421","line":3,"column":5,"nodeType":"358","messageId":"359","endLine":3,"endColumn":12},{"ruleId":"420","severity":1,"message":"422","line":4,"column":5,"nodeType":"358","messageId":"359","endLine":4,"endColumn":14},{"ruleId":"420","severity":1,"message":"423","line":5,"column":5,"nodeType":"358","messageId":"359","endLine":5,"endColumn":13},{"ruleId":"360","replacedBy":"424"},"@typescript-eslint/no-unused-vars","'GoogleMap' is defined but never used.","Identifier","unusedVar","no-new-object",["425"],"'useNavigate' is defined but never used.","'data' is assigned a value but never used.","'sexo' is assigned a value but never used.","'cep' is assigned a value but never used.","'numero' is assigned a value but never used.","'email' is assigned a value but never used.","react-hooks/exhaustive-deps","The 'validateForm' function makes the dependencies of useCallback Hook (at line 145) change on every render. Move it inside the useCallback callback. Alternatively, wrap the definition of 'validateForm' in its own useCallback() Hook.","VariableDeclarator","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'resultado' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'cp' is defined but never used.","'rua' is assigned a value but never used.","'setRua' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'bairro', 'cidade', 'email', 'logradouro', 'navegando', 'senha', and 'validateFields'. Either include them or remove the dependency array.","ArrayExpression",["426"],"The 'validateForm' function makes the dependencies of useCallback Hook (at line 94) change on every render. Move it inside the useCallback callback. Alternatively, wrap the definition of 'validateForm' in its own useCallback() Hook.","'withReactContent' is defined but never used.","'vetorIcon' is defined but never used.","The 'validateForm' function makes the dependencies of useCallback Hook (at line 142) change on every render. Move it inside the useCallback callback. Alternatively, wrap the definition of 'validateForm' in its own useCallback() Hook.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'MenuPerfilFuncionario' is defined but never used.","'useRef' is defined but never used.","React Hook useCallback has missing dependencies: 'navegando' and 'validacao'. Either include them or remove the dependency array.",["427"],"'getAllHistoricoAgendamento' is assigned a value but never used.","'getAllHoraDisponivel' is assigned a value but never used.","'useSearchParams' is defined but never used.","'IListagemDeHorarioDisponivel' is defined but never used.","'IListagemHemocentro' is defined but never used.","'useEffect' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useCallback has a missing dependency: 'horarioIndisponivel'. Either include it or remove the dependency array.",["428"],"'de' is defined but never used.","React Hook useEffect has missing dependencies: 'agenda?.agenda.horaMarcada.hora', 'agenda?.agenda.hospital.cep', 'agenda?.agenda.hospital.nome', and 'vetorExemplo'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setHora' needs the current value of 'agenda.agenda.horaMarcada.hora'.",["429"],"React Hook useCallback has missing dependencies: 'deletarAgendamento' and 'navegando'. Either include them or remove the dependency array.",["430"],"React Hook useEffect has a missing dependency: 'vetorExemplo'. Either include it or remove the dependency array.",["431"],"'TarefasService' is defined but never used.","React Hook useEffect has missing dependencies: 'busca' and 'vetorExemplo'. Either include them or remove the dependency array.",["432"],"The 'validateForm' function makes the dependencies of useCallback Hook (at line 108) change on every render. Move it inside the useCallback callback. Alternatively, wrap the definition of 'validateForm' in its own useCallback() Hook.","no-unused-vars","'vetores' is assigned a value but never used.","'longitude' is assigned a value but never used.","'latitude' is assigned a value but never used.",["425"],"no-object-constructor",{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},{"desc":"441","fix":"442"},{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},"Update the dependencies array to be: [validateFields, cpf, dtNascimento, nome, email, senha, cep, cidade, bairro, logradouro, numero, sexo, navegando]",{"range":"447","text":"448"},"Update the dependencies array to be: [navegando, validacao]",{"range":"449","text":"450"},"Update the dependencies array to be: [horarioIndisponivel]",{"range":"451","text":"452"},"Update the dependencies array to be: [agenda?.agenda.horaMarcada.hora, agenda?.agenda.hospital.cep, agenda?.agenda.hospital.nome, vetorExemplo]",{"range":"453","text":"454"},"Update the dependencies array to be: [deletarAgendamento, navegando]",{"range":"455","text":"456"},"Update the dependencies array to be: [vetorExemplo]",{"range":"457","text":"458"},"Update the dependencies array to be: [busca, pesquisa, setPesquisa, vetorExemplo]",{"range":"459","text":"460"},[7620,7664],"[validateFields, cpf, dtNascimento, nome, email, senha, cep, cidade, bairro, logradouro, numero, sexo, navegando]",[3422,3424],"[navegando, validacao]",[4530,4532],"[horarioIndisponivel]",[2855,2857],"[agenda?.agenda.horaMarcada.hora, agenda?.agenda.hospital.cep, agenda?.agenda.hospital.nome, vetorExemplo]",[5230,5232],"[deletarAgendamento, navegando]",[2032,2034],"[vetorExemplo]",[2480,2503],"[busca, pesquisa, setPesquisa, vetorExemplo]"]