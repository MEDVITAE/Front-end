{"ast":null,"code":"var _jsxFileName = \"/home/usuario/Documentos/Vitae/Front-end/site/src/app/pages/usuario/agenda/components/Agenda.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport '../../../../../html-css-template/css/Agenda.css';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Agenda = () => {\n  _s();\n  const hoje = new Date();\n  const [dataSelecionada, setDataSelecionada] = useState(hoje);\n  const showChosenDate = message => {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: \"top-end\",\n      showConfirmButton: false,\n      timer: 5000,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.onmouseenter = Swal.stopTimer;\n        toast.onmouseleave = Swal.resumeTimer;\n      }\n    });\n    Toast.fire({\n      icon: \"info\",\n      title: message\n    });\n  };\n  const handleDateChange = date => {\n    if (date instanceof Date) {\n      const diaDaSemana = date.getDay();\n      if (diaDaSemana !== 0 && diaDaSemana !== 6) {\n        setDataSelecionada(date);\n        console.log(diaDaSemana);\n        sessionStorage.setItem('data', dataSelecionada.toLocaleString());\n        showChosenDate(\"Agora, selecione um Hemocentro caso ainda não o tenha escolhido.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendario roboto\",\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: handleDateChange // Forçar conversão de tipo para contornar o erro\n      ,\n      value: dataSelecionada // Forçar conversão de tipo para contornar o erro\n      ,\n      minDate: hoje // Impede a seleção de datas anteriores ao dia atual\n      ,\n      locale: 'pt-BR' // Aplica o idioma personalizado\n      ,\n      selectRange: false // Desabilita a seleção de intervalo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Agenda, \"23lcJBZWQOkRGQepxuig21YGovI=\");\n_c = Agenda;\nvar _c;\n$RefreshReg$(_c, \"Agenda\");","map":{"version":3,"names":["useState","Calendar","Swal","jsxDEV","_jsxDEV","Agenda","_s","hoje","Date","dataSelecionada","setDataSelecionada","showChosenDate","message","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","onmouseenter","stopTimer","onmouseleave","resumeTimer","fire","icon","title","handleDateChange","date","diaDaSemana","getDay","console","log","sessionStorage","setItem","toLocaleString","className","children","onChange","value","minDate","locale","selectRange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/usuario/Documentos/Vitae/Front-end/site/src/app/pages/usuario/agenda/components/Agenda.tsx"],"sourcesContent":["import { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nimport '../../../../../html-css-template/css/Agenda.css'\nimport Swal from 'sweetalert2';\n\n\nexport const Agenda = () => {\n  const hoje = new Date();\n  const [dataSelecionada, setDataSelecionada] = useState<Date | Date[]>(hoje);\n\n  \n  const showChosenDate = (message: string) => {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: \"top-end\",\n      showConfirmButton: false,\n      timer: 5000,\n      timerProgressBar: true,\n      didOpen: (toast) => {\n        toast.onmouseenter = Swal.stopTimer;\n        toast.onmouseleave = Swal.resumeTimer;\n      }\n    });\n    \n    Toast.fire({\n      icon: \"info\",\n      title: message\n    });\n  };\n  \n  \n  const handleDateChange = (date: Date | Date[]) => {\n    if (date instanceof Date) {\n      const diaDaSemana = date.getDay();\n      if (diaDaSemana !== 0 && diaDaSemana !== 6) {\n        setDataSelecionada(date);\n        console.log(diaDaSemana);\n        sessionStorage.setItem('data', dataSelecionada.toLocaleString());\n        showChosenDate(\"Agora, selecione um Hemocentro caso ainda não o tenha escolhido.\")\n      }\n    }\n  };\n\n  return (\n    <div className='calendario roboto'>\n      <Calendar\n        onChange={handleDateChange as any} // Forçar conversão de tipo para contornar o erro\n        value={dataSelecionada as Date} // Forçar conversão de tipo para contornar o erro\n        minDate={hoje} // Impede a seleção de datas anteriores ao dia atual\n        locale={'pt-BR'} // Aplica o idioma personalizado\n        selectRange={false} // Desabilita a seleção de intervalo\n      />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,kCAAkC;AAEzC,OAAO,iDAAiD;AACxD,OAAOC,IAAI,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/B,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;EACvB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAgBO,IAAI,CAAC;EAG3E,MAAMI,cAAc,GAAIC,OAAe,IAAK;IAC1C,MAAMC,KAAK,GAAGX,IAAI,CAACY,KAAK,CAAC;MACvBC,KAAK,EAAE,IAAI;MACXC,QAAQ,EAAE,SAAS;MACnBC,iBAAiB,EAAE,KAAK;MACxBC,KAAK,EAAE,IAAI;MACXC,gBAAgB,EAAE,IAAI;MACtBC,OAAO,EAAGL,KAAK,IAAK;QAClBA,KAAK,CAACM,YAAY,GAAGnB,IAAI,CAACoB,SAAS;QACnCP,KAAK,CAACQ,YAAY,GAAGrB,IAAI,CAACsB,WAAW;MACvC;IACF,CAAC,CAAC;IAEFX,KAAK,CAACY,IAAI,CAAC;MACTC,IAAI,EAAE,MAAM;MACZC,KAAK,EAAEf;IACT,CAAC,CAAC;EACJ,CAAC;EAGD,MAAMgB,gBAAgB,GAAIC,IAAmB,IAAK;IAChD,IAAIA,IAAI,YAAYrB,IAAI,EAAE;MACxB,MAAMsB,WAAW,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC;MACjC,IAAID,WAAW,KAAK,CAAC,IAAIA,WAAW,KAAK,CAAC,EAAE;QAC1CpB,kBAAkB,CAACmB,IAAI,CAAC;QACxBG,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;QACxBI,cAAc,CAACC,OAAO,CAAC,MAAM,EAAE1B,eAAe,CAAC2B,cAAc,CAAC,CAAC,CAAC;QAChEzB,cAAc,CAAC,kEAAkE,CAAC;MACpF;IACF;EACF,CAAC;EAED,oBACEP,OAAA;IAAKiC,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAChClC,OAAA,CAACH,QAAQ;MACPsC,QAAQ,EAAEX,gBAAwB,CAAC;MAAA;MACnCY,KAAK,EAAE/B,eAAwB,CAAC;MAAA;MAChCgC,OAAO,EAAElC,IAAK,CAAC;MAAA;MACfmC,MAAM,EAAE,OAAQ,CAAC;MAAA;MACjBC,WAAW,EAAE,KAAM,CAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAAzC,EAAA,CAhDYD,MAAM;AAAA2C,EAAA,GAAN3C,MAAM;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}