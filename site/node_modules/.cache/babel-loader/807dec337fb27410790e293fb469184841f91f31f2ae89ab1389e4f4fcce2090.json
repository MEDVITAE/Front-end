{"ast":null,"code":"import { Api } from \"../../ApiConfig\";\nimport { ApiException } from \"../../ApiException\";\nconst getByCpf = async cpf => {\n  try {\n    const config = {\n      headers: {\n        'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\n      }\n    };\n    const {\n      data\n    } = await Api().get(`/usuario/detalhesDoacao/${cpf}`, config);\n    return data;\n  } catch (error) {\n    return new ApiException(error.message || 'Erro ao consultar Api.');\n  }\n};\nconst create = async dataToCreate => {\n  try {\n    const config = {\n      headers: {\n        'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\n      }\n    };\n    const {\n      data\n    } = await Api().post('/Doacao', dataToCreate, config);\n    sessionStorage.setItem(\"idAgenda\", data.idAgenda);\n    return data;\n  } catch (error) {\n    return new ApiException(error.message || 'Erro ao criar registro.');\n  }\n};\nexport const CadastroDoacaoService = {\n  create,\n  getByCpf\n};","map":{"version":3,"names":["Api","ApiException","getByCpf","cpf","config","headers","sessionStorage","getItem","data","get","error","message","create","dataToCreate","post","setItem","idAgenda","CadastroDoacaoService"],"sources":["/home/usuario/Documentos/Vitae/Front-end/site/src/app/shared/sevice/api/tarefas/cadastros/CadastroDoacaoService.ts"],"sourcesContent":["import { Api } from \"../../ApiConfig\";\nimport { ApiException } from \"../../ApiException\";\n\nexport interface ICadastroDoacao {\n    idAgenda: string;\n    tipo?: string;\n    cpf: string;\n    nome: string;\n    nascimento: string;\n    cep: string;\n    email: string;\n    sexo: string;\n    numeroCasa: string;\n}\n\nexport interface ICadastroDoacaoCreate {\n    quantidade: number;\n    tipo: string;\n    fkAgenda: string | null;\n}\n\nconst getByCpf = async (cpf : string): Promise<ICadastroDoacao | ApiException> => {\n    try {\n\n        const config = {\n            headers: {\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\n            }\n        };\n\n        const { data } = await Api().get(`/usuario/detalhesDoacao/${cpf}`, config);\n        \n        return data;\n\n    } catch (error: any) {\n        return new ApiException(error.message || 'Erro ao consultar Api.');\n    }\n};\n\nconst create = async (dataToCreate: ICadastroDoacaoCreate): Promise<ICadastroDoacaoCreate | ApiException> => {\n    try {\n\n        const config = {\n            headers: {\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\n            }\n        };\n        const { data } = await Api().post<any>('/Doacao', dataToCreate, config);\n\n\n        sessionStorage.setItem(\"idAgenda\", data.idAgenda);\n        return data;\n    }\n    catch (error: any) {\n        return new ApiException(error.message || 'Erro ao criar registro.');\n    }\n};\n\nexport const CadastroDoacaoService = {\n    create,\n    getByCpf\n};"],"mappings":"AAAA,SAASA,GAAG,QAAQ,iBAAiB;AACrC,SAASC,YAAY,QAAQ,oBAAoB;AAoBjD,MAAMC,QAAQ,GAAG,MAAOC,GAAY,IAA8C;EAC9E,IAAI;IAEA,MAAMC,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,eAAe,EAAG,UAASC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAE;MAC/D;IACJ,CAAC;IAED,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,GAAG,CAAC,CAAC,CAACS,GAAG,CAAE,2BAA0BN,GAAI,EAAC,EAAEC,MAAM,CAAC;IAE1E,OAAOI,IAAI;EAEf,CAAC,CAAC,OAAOE,KAAU,EAAE;IACjB,OAAO,IAAIT,YAAY,CAACS,KAAK,CAACC,OAAO,IAAI,wBAAwB,CAAC;EACtE;AACJ,CAAC;AAED,MAAMC,MAAM,GAAG,MAAOC,YAAmC,IAAoD;EACzG,IAAI;IAEA,MAAMT,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,eAAe,EAAG,UAASC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAE;MAC/D;IACJ,CAAC;IACD,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,GAAG,CAAC,CAAC,CAACc,IAAI,CAAM,SAAS,EAAED,YAAY,EAAET,MAAM,CAAC;IAGvEE,cAAc,CAACS,OAAO,CAAC,UAAU,EAAEP,IAAI,CAACQ,QAAQ,CAAC;IACjD,OAAOR,IAAI;EACf,CAAC,CACD,OAAOE,KAAU,EAAE;IACf,OAAO,IAAIT,YAAY,CAACS,KAAK,CAACC,OAAO,IAAI,yBAAyB,CAAC;EACvE;AACJ,CAAC;AAED,OAAO,MAAMM,qBAAqB,GAAG;EACjCL,MAAM;EACNV;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}