{"ast":null,"code":"var _jsxFileName = \"/home/usuario/Documentos/Vitae/Front-end/site/src/app/pages/usuario/agenda/components/Horario.tsx\",\n  _s = $RefreshSig$();\nimport '../../../../../html-css-template/css/HemocentroEHorario.css';\nimport { useEffect, useState } from 'react';\nimport Swal from 'sweetalert2';\nimport { TarefasService } from '../../../../shared/sevice/api/tarefas/TarefasService';\nimport { ApiException } from '../../../../shared/sevice/api/ApiException';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Horario = ({\n  onChange\n}) => {\n  _s();\n  const [horario, setHorario] = useState('');\n  const [horarioIndisponivel, setHorarioIndisponivel] = useState([]);\n  const [horarioMapeado, setHorarioMapeado] = useState({});\n  const [horaOcupada, setHoraOcupada] = useState(new Set());\n  sessionStorage.setItem('hora', horario);\n  const tokenSession = sessionStorage.getItem('token');\n  const idHemoSession = sessionStorage.getItem('hemocentro');\n  const vetorHora = [{\n    id: 1,\n    hora: '08:30'\n  }, {\n    id: 2,\n    hora: '09:00'\n  }, {\n    id: 3,\n    hora: '09:30'\n  }, {\n    id: 4,\n    hora: '10:00'\n  }, {\n    id: 5,\n    hora: '10:30'\n  }, {\n    id: 6,\n    hora: '11:00'\n  }, {\n    id: 7,\n    hora: '11:30'\n  }, {\n    id: 8,\n    hora: '13:00'\n  }, {\n    id: 9,\n    hora: '13:30'\n  }, {\n    id: 10,\n    hora: '14:00'\n  }, {\n    id: 11,\n    hora: '14:30'\n  }, {\n    id: 12,\n    hora: '15:00'\n  }];\n  const showChosenTime = message => {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: \"top-end\",\n      showConfirmButton: false,\n      timer: 5000,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.onmouseenter = Swal.stopTimer;\n        toast.onmouseleave = Swal.resumeTimer;\n      }\n    });\n    Toast.fire({\n      icon: \"info\",\n      title: message\n    });\n  };\n  const showChosenWrongTime = message => {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: \"top-end\",\n      showConfirmButton: false,\n      timer: 5000,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.onmouseenter = Swal.stopTimer;\n        toast.onmouseleave = Swal.resumeTimer;\n      }\n    });\n    Toast.fire({\n      icon: \"error\",\n      title: message\n    });\n  };\n  useEffect(() => {\n    TarefasService.getAllHistoricoAgendamento(tokenSession ? tokenSession : '').then(result => {\n      if (result instanceof ApiException) {\n        alert(result.message);\n      } else {\n        setHorarioIndisponivel(result.data);\n      }\n    });\n    setHoraOcupada(new Set(horarioIndisponivel.map(item => {\n      const hora = new Date(item.horario);\n      return hora.getHours() + ':' + (hora.getMinutes() < 10 ? '00' : '30');\n    })));\n  }, []);\n  const handleHorarioClick = hora => {\n    console.log(horaOcupada);\n    if (hora !== '') {\n      setHorario(hora);\n      showChosenTime(\"Agora, finalize selecionando o botão de agendar.\");\n    } else {\n      showChosenWrongTime(\"Horário indisponível, selecione outro.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"caixaHemo\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formularioAgenda\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headerHomo\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"rowdies\",\n            children: \"HOR\\xC1RIO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnFechar bg-azulClaro\",\n            onClick: onChange,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"roboto sbold-24\",\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divisor\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"linhaDivisoria\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"historicoHorario\",\n          children: vetorHora.map(vetor => {\n            const isHorarioOcupado = horaOcupada.has(vetor.hora);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"caixaHora\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                onClick: () => handleHorarioClick(horaOcupada.has(vetor.hora) ? vetor.hora : ''),\n                className: `\n                                    hora roboto regular-20 ${horaOcupada.has(vetor.hora) ? 'indisponivel' : 'disponivel'}`,\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [vetor.hora, \"h\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this)\n            }, vetor.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Horario, \"uSjszgSh4OLR6XMwq0vKlECTqTY=\");\n_c = Horario;\nvar _c;\n$RefreshReg$(_c, \"Horario\");","map":{"version":3,"names":["useEffect","useState","Swal","TarefasService","ApiException","jsxDEV","_jsxDEV","Fragment","_Fragment","Horario","onChange","_s","horario","setHorario","horarioIndisponivel","setHorarioIndisponivel","horarioMapeado","setHorarioMapeado","horaOcupada","setHoraOcupada","Set","sessionStorage","setItem","tokenSession","getItem","idHemoSession","vetorHora","id","hora","showChosenTime","message","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","onmouseenter","stopTimer","onmouseleave","resumeTimer","fire","icon","title","showChosenWrongTime","getAllHistoricoAgendamento","then","result","alert","data","map","item","Date","getHours","getMinutes","handleHorarioClick","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","vetor","isHorarioOcupado","has","_c","$RefreshReg$"],"sources":["/home/usuario/Documentos/Vitae/Front-end/site/src/app/pages/usuario/agenda/components/Horario.tsx"],"sourcesContent":["import '../../../../../html-css-template/css/HemocentroEHorario.css'\nimport { useEffect, useState } from 'react';\nimport Swal from 'sweetalert2';\nimport { IAgenda, TarefasService } from '../../../../shared/sevice/api/tarefas/TarefasService';\nimport { ApiException } from '../../../../shared/sevice/api/ApiException';\n\ninterface IHorarioProps {\n    onChange: () => void;\n}\n\nexport const Horario: React.FC<IHorarioProps> = ({ onChange }) => {\n    const [horario, setHorario] = useState<string>('');\n    const [horarioIndisponivel, setHorarioIndisponivel] = useState<IAgenda[]>([]);\n    const [horarioMapeado, setHorarioMapeado] = useState<{ [key: string]: string }>({});\n    const [horaOcupada, setHoraOcupada] = useState<Set<string>>(new Set());\n\n    sessionStorage.setItem('hora', horario);\n    const tokenSession = sessionStorage.getItem('token');\n    const idHemoSession = sessionStorage.getItem('hemocentro');\n\n    const vetorHora = [\n        {\n            id: 1,\n            hora: '08:30'\n        },\n        {\n            id: 2,\n            hora: '09:00'\n        },\n        {\n            id: 3,\n            hora: '09:30'\n        },\n        {\n            id: 4,\n            hora: '10:00'\n        },\n        {\n            id: 5,\n            hora: '10:30'\n        },\n        {\n            id: 6,\n            hora: '11:00'\n        },\n        {\n            id: 7,\n            hora: '11:30'\n        },\n        {\n            id: 8,\n            hora: '13:00'\n        },\n        {\n            id: 9,\n            hora: '13:30'\n        },\n        {\n            id: 10,\n            hora: '14:00'\n        },\n        {\n            id: 11,\n            hora: '14:30'\n        },\n        {\n            id: 12,\n            hora: '15:00'\n        },\n    ];\n\n    const showChosenTime = (message: string) => {\n        const Toast = Swal.mixin({\n            toast: true,\n            position: \"top-end\",\n            showConfirmButton: false,\n            timer: 5000,\n            timerProgressBar: true,\n            didOpen: (toast) => {\n                toast.onmouseenter = Swal.stopTimer;\n                toast.onmouseleave = Swal.resumeTimer;\n            }\n        });\n\n        Toast.fire({\n            icon: \"info\",\n            title: message\n        });\n    };\n\n    const showChosenWrongTime = (message: string) => {\n        const Toast = Swal.mixin({\n            toast: true,\n            position: \"top-end\",\n            showConfirmButton: false,\n            timer: 5000,\n            timerProgressBar: true,\n            didOpen: (toast) => {\n                toast.onmouseenter = Swal.stopTimer;\n                toast.onmouseleave = Swal.resumeTimer;\n            }\n        });\n\n        Toast.fire({\n            icon: \"error\",\n            title: message\n        });\n    };\n\n    useEffect(() => {\n        TarefasService.getAllHistoricoAgendamento(tokenSession ? tokenSession : '')\n            .then((result) => {\n                if (result instanceof ApiException) {\n                    alert(result.message);\n                }\n                else {\n                    setHorarioIndisponivel(result.data);\n                }\n            });\n\n        setHoraOcupada(new Set(horarioIndisponivel.map((item) => {\n            const hora = new Date(item.horario);\n            return hora.getHours() + ':' + (hora.getMinutes() < 10 ? '00' : '30');\n        })));\n\n    }, []);\n    \n    const handleHorarioClick = (hora: string) => {\n        console.log(horaOcupada);\n\n        if (hora !== '') {\n            setHorario(hora);\n            showChosenTime(\"Agora, finalize selecionando o botão de agendar.\");\n        } else {\n            showChosenWrongTime(\"Horário indisponível, selecione outro.\");\n        }\n    };\n\n\n    return (\n        <>\n            <div className=\"caixaHemo\">\n                <div className=\"formularioAgenda\">\n                    <div className=\"headerHomo\">\n                        <h1 className=\"rowdies\">HORÁRIO</h1>\n                        <button className=\"btnFechar bg-azulClaro\" onClick={onChange}>\n                            <p className=\"roboto sbold-24\">x</p>\n                        </button>\n                    </div>\n                    <div className=\"divisor\">\n                        <span className='linhaDivisoria'></span>\n                    </div>\n                    <div className=\"historicoHorario\">\n                        {vetorHora.map((vetor) => {\n                            const isHorarioOcupado = horaOcupada.has(vetor.hora);\n                            return <div className='caixaHora' key={vetor.id}>\n                                <h3\n                                    onClick={() => handleHorarioClick(horaOcupada.has(vetor.hora) ? vetor.hora : '')}\n                                    className={`\n                                    hora roboto regular-20 ${\n                                        horaOcupada.has(vetor.hora) ? 'indisponivel' : 'disponivel'\n                                    }`}\n                                >\n                                    <p>{vetor.hora}h</p>\n                                </h3>\n                            </div>\n                        })}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}